shadow$provide.module$node_modules$rc_upload$lib$request=function(global,require,module,exports){function getError(option,xhr){var msg="cannot ".concat(option.method," ").concat(option.action," ").concat(xhr.status,"'");msg=Error(msg);msg.status=xhr.status;msg.method=option.method;msg.url=option.action;return msg}function getBody(xhr){xhr=xhr.responseText||xhr.response;if(!xhr)return xhr;try{return JSON.parse(xhr)}catch(e){return xhr}}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=
function(option){var xhr=new XMLHttpRequest;option.onProgress&&xhr.upload&&(xhr.upload.onprogress=function(e){0<e.total&&(e.percent=e.loaded/e.total*100);option.onProgress(e)});var formData=new FormData;option.data&&Object.keys(option.data).forEach(function(key){var value=option.data[key];Array.isArray(value)?value.forEach(function(item){formData.append("".concat(key,"[]"),item)}):formData.append(key,option.data[key])});option.file instanceof Blob?formData.append(option.filename,option.file,option.file.name):
formData.append(option.filename,option.file);xhr.onerror=function(e){option.onError(e)};xhr.onload=function(){return 200>xhr.status||300<=xhr.status?option.onError(getError(option,xhr),getBody(xhr)):option.onSuccess(getBody(xhr),xhr)};xhr.open(option.method,option.action,!0);option.withCredentials&&"withCredentials"in xhr&&(xhr.withCredentials=!0);var headers=option.headers||{};null!==headers["X-Requested-With"]&&xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");Object.keys(headers).forEach(function(h){null!==
headers[h]&&xhr.setRequestHeader(h,headers[h])});xhr.send(formData);return{abort:function(){xhr.abort()}}}}
//# sourceMappingURL=module$node_modules$rc_upload$lib$request.js.map
