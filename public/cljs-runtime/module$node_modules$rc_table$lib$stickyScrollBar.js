shadow$provide.module$node_modules$rc_table$lib$stickyScrollBar=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),
_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),React=global(require("module$node_modules$react$index")),_addEventListener=module(require("module$node_modules$rc_util$lib$Dom$addEventListener")),_getScrollBarSize=module(require("module$node_modules$rc_util$lib$getScrollBarSize")),_classnames=module(require("module$node_modules$classnames$index")),_css=require("module$node_modules$rc_util$lib$Dom$css"),_TableContext=module(require("module$node_modules$rc_table$lib$context$TableContext")),
_useFrame=require("module$node_modules$rc_table$lib$hooks$useFrame");require=React.forwardRef(function(_ref,ref){var _scrollBodyRef$curren,_scrollBodyRef$curren2,scrollBodyRef=_ref.scrollBodyRef,onScroll=_ref.onScroll,offsetScroll=_ref.offsetScroll,container=_ref.container;_ref=React.useContext(_TableContext.default).prefixCls;var bodyScrollWidth=(null===(_scrollBodyRef$curren=scrollBodyRef.current)||void 0===_scrollBodyRef$curren?void 0:_scrollBodyRef$curren.scrollWidth)||0,bodyWidth=(null===(_scrollBodyRef$curren2=
scrollBodyRef.current)||void 0===_scrollBodyRef$curren2?void 0:_scrollBodyRef$curren2.clientWidth)||0,scrollBarWidth=bodyScrollWidth&&bodyWidth/bodyScrollWidth*bodyWidth;_scrollBodyRef$curren=React.useRef();_scrollBodyRef$curren2=(0,_useFrame.useLayoutState)({scrollLeft:0,isHiddenScrollBar:!1});_scrollBodyRef$curren2=(0,_slicedToArray2.default)(_scrollBodyRef$curren2,2);var scrollState=_scrollBodyRef$curren2[0],setScrollState=_scrollBodyRef$curren2[1],refState=React.useRef({delta:0,x:0});_scrollBodyRef$curren2=
React.useState(!1);_scrollBodyRef$curren2=(0,_slicedToArray2.default)(_scrollBodyRef$curren2,2);var isActive=_scrollBodyRef$curren2[0],setActive=_scrollBodyRef$curren2[1],onMouseUp=function(){setActive(!1)},onMouseMove=function(event){var _window,buttons=(event||(null===(_window=window)||void 0===_window?void 0:_window.event)).buttons;isActive&&0!==buttons?(_window=refState.current.x+event.pageX-refState.current.x-refState.current.delta,0>=_window&&(_window=0),_window+scrollBarWidth>=bodyWidth&&(_window=
bodyWidth-scrollBarWidth),onScroll({scrollLeft:_window/bodyWidth*(bodyScrollWidth+2)}),refState.current.x=event.pageX):isActive&&setActive(!1)},onContainerScroll=function(){var tableOffsetTop=(0,_css.getOffset)(scrollBodyRef.current).top,tableBottomOffset=tableOffsetTop+scrollBodyRef.current.offsetHeight,currentClientOffset=container===window?document.documentElement.scrollTop+window.innerHeight:(0,_css.getOffset)(container).top+container.clientHeight;tableBottomOffset-(0,_getScrollBarSize.default)()<=
currentClientOffset||tableOffsetTop>=currentClientOffset-offsetScroll?setScrollState(function(state){return(0,_objectSpread2.default)((0,_objectSpread2.default)({},state),{},{isHiddenScrollBar:!0})}):setScrollState(function(state){return(0,_objectSpread2.default)((0,_objectSpread2.default)({},state),{},{isHiddenScrollBar:!1})})},setScrollLeft=function(left){setScrollState(function(state){return(0,_objectSpread2.default)((0,_objectSpread2.default)({},state),{},{scrollLeft:left/bodyScrollWidth*bodyWidth||
0})})};React.useImperativeHandle(ref,function(){return{setScrollLeft:setScrollLeft}});React.useEffect(function(){var onMouseUpListener=(0,_addEventListener.default)(document.body,"mouseup",onMouseUp,!1),onMouseMoveListener=(0,_addEventListener.default)(document.body,"mousemove",onMouseMove,!1);onContainerScroll();return function(){onMouseUpListener.remove();onMouseMoveListener.remove()}},[scrollBarWidth,isActive]);React.useEffect(function(){var onScrollListener=(0,_addEventListener.default)(container,
"scroll",onContainerScroll,!1),onResizeListener=(0,_addEventListener.default)(window,"resize",onContainerScroll,!1);return function(){onScrollListener.remove();onResizeListener.remove()}},[container]);React.useEffect(function(){scrollState.isHiddenScrollBar||setScrollState(function(state){var bodyNode=scrollBodyRef.current;return bodyNode?(0,_objectSpread2.default)((0,_objectSpread2.default)({},state),{},{scrollLeft:bodyNode.scrollLeft/bodyNode.scrollWidth*bodyNode.clientWidth}):state})},[scrollState.isHiddenScrollBar]);
return bodyScrollWidth<=bodyWidth||!scrollBarWidth||scrollState.isHiddenScrollBar?null:React.createElement("div",{style:{height:(0,_getScrollBarSize.default)(),width:bodyWidth,bottom:offsetScroll},className:"".concat(_ref,"-sticky-scroll")},React.createElement("div",{onMouseDown:function(event){event.persist();refState.current.delta=event.pageX-scrollState.scrollLeft;refState.current.x=0;setActive(!0);event.preventDefault()},ref:_scrollBodyRef$curren,className:(0,_classnames.default)("".concat(_ref,
"-sticky-scroll-bar"),(0,_defineProperty2.default)({},"".concat(_ref,"-sticky-scroll-bar-active"),isActive)),style:{width:"".concat(scrollBarWidth,"px"),transform:"translate3d(".concat(scrollState.scrollLeft,"px, 0, 0)")}}))});exports.default=require}
//# sourceMappingURL=module$node_modules$rc_table$lib$stickyScrollBar.js.map
