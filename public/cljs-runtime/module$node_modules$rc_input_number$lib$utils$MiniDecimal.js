shadow$provide.module$node_modules$rc_input_number$lib$utils$MiniDecimal=function(global,require,module,exports){function getMiniDecimal(value){return(0,_supportUtil.supportBigInt)()?new BigIntDecimal(value):new NumberDecimal(value)}function toFixed(numStr,separatorStr,precision){var _trimNumber2=(0,_numberUtil.trimNumber)(numStr),negativeStr=_trimNumber2.negativeStr,integerStr=_trimNumber2.integerStr;_trimNumber2=_trimNumber2.decimalStr;var precisionDecimalStr="".concat(separatorStr).concat(_trimNumber2);
negativeStr="".concat(negativeStr).concat(integerStr);return 0<=precision?(integerStr=Number(_trimNumber2[precision]),5<=integerStr?(numStr=getMiniDecimal(numStr).add("0.".concat("0".repeat(precision)).concat(10-integerStr)),toFixed(numStr.toString(),separatorStr,precision)):0===precision?negativeStr:"".concat(negativeStr).concat(separatorStr).concat(_trimNumber2.padEnd(precision,"0").slice(0,precision))):".0"===precisionDecimalStr?negativeStr:"".concat(negativeStr).concat(precisionDecimalStr)}global=
require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=getMiniDecimal;exports.toFixed=toFixed;exports.BigIntDecimal=exports.NumberDecimal=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_numberUtil=require("module$node_modules$rc_input_number$lib$utils$numberUtil"),
_supportUtil=require("module$node_modules$rc_input_number$lib$utils$supportUtil"),NumberDecimal=function(){function NumberDecimal(value){(0,_classCallCheck2.default)(this,NumberDecimal);this.origin="";!value&&0!==value||!String(value).trim()?this.empty=!0:(this.origin=String(value),this.number=Number(value))}(0,_createClass2.default)(NumberDecimal,[{key:"negate",value:function(){return new NumberDecimal(-this.toNumber())}},{key:"add",value:function(value){if(this.isInvalidate())return new NumberDecimal(value);
var target=Number(value);if(Number.isNaN(target))return this;value=this.number+target;if(value>Number.MAX_SAFE_INTEGER)return new NumberDecimal(Number.MAX_SAFE_INTEGER);if(value<Number.MIN_SAFE_INTEGER)return new NumberDecimal(Number.MIN_SAFE_INTEGER);target=Math.max((0,_numberUtil.getNumberPrecision)(this.number),(0,_numberUtil.getNumberPrecision)(target));return new NumberDecimal(value.toFixed(target))}},{key:"isEmpty",value:function(){return this.empty}},{key:"isNaN",value:function(){return Number.isNaN(this.number)}},
{key:"isInvalidate",value:function(){return this.isEmpty()||this.isNaN()}},{key:"equals",value:function(target){return this.toNumber()===(null===target||void 0===target?void 0:target.toNumber())}},{key:"lessEquals",value:function(target){return 0>=this.add(target.negate().toString()).toNumber()}},{key:"toNumber",value:function(){return this.number}},{key:"toString",value:function(){var safe=0<arguments.length&&void 0!==arguments[0]?arguments[0]:!0;return this.isInvalidate()?safe?"":this.origin:(0,
_numberUtil.num2str)(this.number)}}]);return NumberDecimal}();exports.NumberDecimal=NumberDecimal;var BigIntDecimal=function(){function BigIntDecimal(value){(0,_classCallCheck2.default)(this,BigIntDecimal);this.origin="";!value&&0!==value||!String(value).trim()?this.empty=!0:(this.origin=String(value),"-"===value?this.nan=!0:((0,_numberUtil.isE)(value)&&(value=Number(value)),value="string"===typeof value?value:(0,_numberUtil.num2str)(value),(0,_numberUtil.validateNumber)(value)?(value=(0,_numberUtil.trimNumber)(value),
this.negative=value.negative,value=value.trimStr.split("."),this.integer=BigInt(value[0]),value=value[1]||"0",this.decimal=BigInt(value),this.decimalLen=value.length):this.nan=!0))}(0,_createClass2.default)(BigIntDecimal,[{key:"getMark",value:function(){return this.negative?"-":""}},{key:"getIntegerStr",value:function(){return this.integer.toString()}},{key:"getDecimalStr",value:function(){return this.decimal.toString().padStart(this.decimalLen,"0")}},{key:"alignDecimal",value:function(decimalLength){decimalLength=
"".concat(this.getMark()).concat(this.getIntegerStr()).concat(this.getDecimalStr().padEnd(decimalLength,"0"));return BigInt(decimalLength)}},{key:"negate",value:function(){var clone=new BigIntDecimal(this.toString());clone.negative=!clone.negative;return clone}},{key:"add",value:function(value){if(this.isInvalidate())return new BigIntDecimal(value);var offset=new BigIntDecimal(value);if(offset.isInvalidate())return this;value=Math.max(this.getDecimalStr().length,offset.getDecimalStr().length);var myAlignedDecimal=
this.alignDecimal(value);offset=offset.alignDecimal(value);myAlignedDecimal=(myAlignedDecimal+offset).toString();myAlignedDecimal=(0,_numberUtil.trimNumber)(myAlignedDecimal);offset=myAlignedDecimal.trimStr;myAlignedDecimal="".concat(myAlignedDecimal.negativeStr).concat(offset.padStart(value+1,"0"));return new BigIntDecimal("".concat(myAlignedDecimal.slice(0,-value),".").concat(myAlignedDecimal.slice(-value)))}},{key:"isEmpty",value:function(){return this.empty}},{key:"isNaN",value:function(){return this.nan}},
{key:"isInvalidate",value:function(){return this.isEmpty()||this.isNaN()}},{key:"equals",value:function(target){return this.toString()===(null===target||void 0===target?void 0:target.toString())}},{key:"lessEquals",value:function(target){return 0>=this.add(target.negate().toString()).toNumber()}},{key:"toNumber",value:function(){return this.isNaN()?NaN:Number(this.toString())}},{key:"toString",value:function(){var safe=0<arguments.length&&void 0!==arguments[0]?arguments[0]:!0;return this.isInvalidate()?
safe?"":this.origin:(0,_numberUtil.trimNumber)("".concat(this.getMark()).concat(this.getIntegerStr(),".").concat(this.getDecimalStr())).fullStr}}]);return BigIntDecimal}();exports.BigIntDecimal=BigIntDecimal}
//# sourceMappingURL=module$node_modules$rc_input_number$lib$utils$MiniDecimal.js.map
