{
"version":3,
"file":"module$node_modules$antd$lib$tooltip$placements.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/antd/lib/tooltip/placements.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$tooltip$placements\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOverflowOptions = getOverflowOptions;\nexports[\"default\"] = getPlacements;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _placements = require(\"rc-tooltip/lib/placements\");\n\nvar autoAdjustOverflowEnabled = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar autoAdjustOverflowDisabled = {\n  adjustX: 0,\n  adjustY: 0\n};\nvar targetOffset = [0, 0];\n\nfunction getOverflowOptions(autoAdjustOverflow) {\n  if (typeof autoAdjustOverflow === 'boolean') {\n    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n  }\n\n  return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, autoAdjustOverflowDisabled), autoAdjustOverflow);\n}\n\nfunction getPlacements(config) {\n  var _config$arrowWidth = config.arrowWidth,\n      arrowWidth = _config$arrowWidth === void 0 ? 5 : _config$arrowWidth,\n      _config$horizontalArr = config.horizontalArrowShift,\n      horizontalArrowShift = _config$horizontalArr === void 0 ? 16 : _config$horizontalArr,\n      _config$verticalArrow = config.verticalArrowShift,\n      verticalArrowShift = _config$verticalArrow === void 0 ? 8 : _config$verticalArrow,\n      autoAdjustOverflow = config.autoAdjustOverflow;\n  var placementMap = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-4, 0]\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [4, 0]\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -4]\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, 4]\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + arrowWidth), -4]\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-4, -(verticalArrowShift + arrowWidth)]\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + arrowWidth, -4]\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [4, -(verticalArrowShift + arrowWidth)]\n    },\n    bottomRight: {\n      points: ['tr', 'bc'],\n      offset: [horizontalArrowShift + arrowWidth, 4]\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [4, verticalArrowShift + arrowWidth]\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + arrowWidth), 4]\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-4, verticalArrowShift + arrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(function (key) {\n    placementMap[key] = config.arrowPointAtCenter ? (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, placementMap[key]), {\n      overflow: getOverflowOptions(autoAdjustOverflow),\n      targetOffset: targetOffset\n    }) : (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, _placements.placements[key]), {\n      overflow: getOverflowOptions(autoAdjustOverflow)\n    });\n    placementMap[key].ignoreShake = true;\n  });\n  return placementMap;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getOverflowOptions","autoAdjustOverflow","autoAdjustOverflowEnabled","autoAdjustOverflowDisabled","_extends2","_interopRequireDefault","Object","defineProperty","value","getPlacements","config","_config$arrowWidth","arrowWidth","_config$horizontalArr","horizontalArrowShift","_config$verticalArrow","verticalArrowShift","placementMap","left","points","offset","right","top","bottom","topLeft","leftTop","topRight","rightTop","bottomRight","rightBottom","bottomLeft","leftBottom","keys","forEach","key","arrowPointAtCenter","overflow","targetOffset","_placements","placements","ignoreShake","adjustX","adjustY"]
}
