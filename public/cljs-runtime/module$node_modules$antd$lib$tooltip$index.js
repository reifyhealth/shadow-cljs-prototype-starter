shadow$provide.module$node_modules$antd$lib$tooltip$index=function(global,require,module,exports){function getDisabledCompatibleChildren(element,prefixCls){var elementType=element.type;if((!0===elementType.__ANT_BUTTON||!0===elementType.__ANT_SWITCH||!0===elementType.__ANT_CHECKBOX||"button"===element.type)&&element.props.disabled){var _splitObject=splitObject(element.props.style,"position left right top bottom float display zIndex".split(" "));elementType=_splitObject.picked;_splitObject=_splitObject.omitted;
elementType=(0,_extends2["default"])((0,_extends2["default"])({display:"inline-block"},elementType),{cursor:"not-allowed",width:element.props.block?"100%":null});_splitObject=(0,_extends2["default"])((0,_extends2["default"])({},_splitObject),{pointerEvents:"none"});_splitObject=(0,_reactNode.cloneElement)(element,{style:_splitObject,className:null});return React.createElement("span",{style:elementType,className:(0,_classnames["default"])(element.props.className,"".concat(prefixCls,"-disabled-compatible-wrapper"))},
_splitObject)}return element}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),
React=global(require("module$node_modules$react$index")),_rcTooltip=module(require("module$node_modules$rc_tooltip$lib$index")),_useMergedState3=module(require("module$node_modules$rc_util$lib$hooks$useMergedState")),_classnames=module(require("module$node_modules$classnames$index")),_placements=module(require("module$node_modules$antd$lib$tooltip$placements")),_reactNode=require("module$node_modules$antd$lib$_util$reactNode"),_configProvider=require("module$node_modules$antd$lib$config_provider$index");
global=require("module$node_modules$antd$lib$_util$colors");var _motion=require("module$node_modules$antd$lib$_util$motion"),splitObject=function(obj,keys){var picked={},omitted=(0,_extends2["default"])({},obj);keys.forEach(function(key){obj&&key in obj&&(picked[key]=obj[key],delete omitted[key])});return{picked:picked,omitted:omitted}},PresetColorRegex=new RegExp("^(".concat(global.PresetColorTypes.join("|"),")(-inverse)?$"));require=React.forwardRef(function(props,ref){var _classNames2,_React$useContext=
React.useContext(_configProvider.ConfigContext),getContextPopupContainer=_React$useContext.getPopupContainer,getPrefixCls=_React$useContext.getPrefixCls;_React$useContext=_React$useContext.direction;var _useMergedState=(0,_useMergedState3["default"])(!1,{value:props.visible,defaultValue:props.defaultVisible});_useMergedState=(0,_slicedToArray2["default"])(_useMergedState,2);var visible=_useMergedState[0],setVisible=_useMergedState[1],isNoTitle=function(){var title=props.title,overlay=props.overlay;
return!title&&!overlay&&0!==title},getTooltipPlacements=function(){var arrowPointAtCenter=props.arrowPointAtCenter,autoAdjustOverflow=props.autoAdjustOverflow;return props.builtinPlacements||(0,_placements["default"])({arrowPointAtCenter:arrowPointAtCenter,autoAdjustOverflow:autoAdjustOverflow})},openClassName=props.openClassName;_useMergedState=props.getPopupContainer;var getTooltipContainer=props.getTooltipContainer,overlayClassName=props.overlayClassName,color=props.color,overlayInnerStyle=props.overlayInnerStyle,
children=props.children,prefixCls=getPrefixCls("tooltip",props.prefixCls);getPrefixCls=getPrefixCls();"visible"in props||!isNoTitle()||(visible=!1);children=getDisabledCompatibleChildren((0,_reactNode.isValidElement)(children)?children:React.createElement("span",null,children),prefixCls);var childProps=children.props;openClassName=(0,_classnames["default"])(childProps.className,(0,_defineProperty2["default"])({},openClassName||"".concat(prefixCls,"-open"),!0));_React$useContext=(0,_classnames["default"])(overlayClassName,
(_classNames2={},(0,_defineProperty2["default"])(_classNames2,"".concat(prefixCls,"-rtl"),"rtl"===_React$useContext),(0,_defineProperty2["default"])(_classNames2,"".concat(prefixCls,"-").concat(color),color&&PresetColorRegex.test(color)),_classNames2));_classNames2=overlayInnerStyle;if(color&&!PresetColorRegex.test(color)){_classNames2=(0,_extends2["default"])((0,_extends2["default"])({},overlayInnerStyle),{background:color});var arrowContentStyle={background:color}}return React.createElement(_rcTooltip["default"],
(0,_extends2["default"])({},props,{prefixCls:prefixCls,overlayClassName:_React$useContext,getTooltipContainer:_useMergedState||getTooltipContainer||getContextPopupContainer,ref:ref,builtinPlacements:getTooltipPlacements(),overlay:function(){var title=props.title;return 0===title?title:props.overlay||title||""}(),visible:visible,onVisibleChange:function(vis){var _a;setVisible(isNoTitle()?!1:vis);isNoTitle()||(null===(_a=props.onVisibleChange)||void 0===_a?void 0:_a.call(props,vis))},onPopupAlign:function(domNode,
align){var placements=getTooltipPlacements(),placement=Object.keys(placements).filter(function(key){return placements[key].points[0]===align.points[0]&&placements[key].points[1]===align.points[1]})[0];if(placement){var rect=domNode.getBoundingClientRect(),JSCompiler_object_inline_top_1947="50%",JSCompiler_object_inline_left_1948="50%";if(0<=placement.indexOf("top")||0<=placement.indexOf("Bottom"))JSCompiler_object_inline_top_1947="".concat(rect.height-align.offset[1],"px");else if(0<=placement.indexOf("Top")||
0<=placement.indexOf("bottom"))JSCompiler_object_inline_top_1947="".concat(-align.offset[1],"px");if(0<=placement.indexOf("left")||0<=placement.indexOf("Right"))JSCompiler_object_inline_left_1948="".concat(rect.width-align.offset[0],"px");else if(0<=placement.indexOf("right")||0<=placement.indexOf("Left"))JSCompiler_object_inline_left_1948="".concat(-align.offset[0],"px");domNode.style.transformOrigin="".concat(JSCompiler_object_inline_left_1948," ").concat(JSCompiler_object_inline_top_1947)}},overlayInnerStyle:_classNames2,
arrowContent:React.createElement("span",{className:"".concat(prefixCls,"-arrow-content"),style:arrowContentStyle}),motion:{motionName:(0,_motion.getTransitionName)(getPrefixCls,"zoom-big-fast",props.transitionName),motionDeadline:1E3}}),visible?(0,_reactNode.cloneElement)(children,{className:openClassName}):children)});require.displayName="Tooltip";require.defaultProps={placement:"top",mouseEnterDelay:.1,mouseLeaveDelay:.1,arrowPointAtCenter:!1,autoAdjustOverflow:!0};exports["default"]=require}
//# sourceMappingURL=module$node_modules$antd$lib$tooltip$index.js.map
