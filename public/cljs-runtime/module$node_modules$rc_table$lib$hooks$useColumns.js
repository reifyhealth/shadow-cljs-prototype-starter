shadow$provide.module$node_modules$rc_table$lib$hooks$useColumns=function(global,require,module,exports){function convertChildrenToColumns(children){return(0,_toArray.default)(children).filter(function(node){return React.isValidElement(node)}).map(function(_ref){var key=_ref.key,props=_ref.props;_ref=props.children;props=(0,_objectWithoutProperties2.default)(props,["children"]);key=(0,_objectSpread2.default)({key:key},props);_ref&&(key.children=convertChildrenToColumns(_ref));return key})}function flatColumns(columns){return columns.reduce(function(list,
column){var fixed=column.fixed,parsedFixed=!0===fixed?"left":fixed;return(fixed=column.children)&&0<fixed.length?[].concat((0,_toConsumableArray2.default)(list),(0,_toConsumableArray2.default)(flatColumns(fixed).map(function(subColum){return(0,_objectSpread2.default)({fixed:parsedFixed},subColum)}))):[].concat((0,_toConsumableArray2.default)(list),[(0,_objectSpread2.default)((0,_objectSpread2.default)({},column),{},{fixed:parsedFixed})])},[])}function warningFixed(flattenColumns){for(var allFixLeft=
!0,i=0;i<flattenColumns.length;i+=1){var col=flattenColumns[i];if(allFixLeft&&"left"!==col.fixed)allFixLeft=!1;else if(!allFixLeft&&"left"===col.fixed){(0,_warning.default)(!1,"Index ".concat(i-1," of `columns` missing `fixed\x3d'left'` prop."));break}}allFixLeft=!0;for(i=flattenColumns.length-1;0<=i;--i)if(col=flattenColumns[i],allFixLeft&&"right"!==col.fixed)allFixLeft=!1;else if(!allFixLeft&&"right"===col.fixed){(0,_warning.default)(!1,"Index ".concat(i+1," of `columns` missing `fixed\x3d'right'` prop."));
break}}function revertForRtl(columns){return columns.map(function(column){var fixed=column.fixed;column=(0,_objectWithoutProperties2.default)(column,["fixed"]);var parsedFixed=fixed;"left"===fixed?parsedFixed="right":"right"===fixed&&(parsedFixed="left");return(0,_objectSpread2.default)({fixed:parsedFixed},column)})}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports.convertChildrenToColumns=convertChildrenToColumns;exports.default=void 0;var _defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),_objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_objectWithoutProperties2=module(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),
React=global(require("module$node_modules$react$index")),_warning=module(require("module$node_modules$rc_util$lib$warning")),_toArray=module(require("module$node_modules$rc_util$lib$Children$toArray")),_legacyUtil=require("module$node_modules$rc_table$lib$utils$legacyUtil");exports.default=function(_ref2,transformColumns){var prefixCls=_ref2.prefixCls,columns=_ref2.columns,children=_ref2.children,expandable=_ref2.expandable,expandedKeys=_ref2.expandedKeys,getRowKey=_ref2.getRowKey,onTriggerExpand=
_ref2.onTriggerExpand,expandIcon=_ref2.expandIcon,rowExpandable=_ref2.rowExpandable,expandIconColumnIndex=_ref2.expandIconColumnIndex,direction=_ref2.direction,expandRowByClick=_ref2.expandRowByClick,columnWidth=_ref2.columnWidth,baseColumns=React.useMemo(function(){return columns||convertChildrenToColumns(children)},[columns,children]),withExpandColumns=React.useMemo(function(){if(expandable){var _expandColumn,expandColIndex=expandIconColumnIndex||0,prevColumn=baseColumns[expandColIndex];prevColumn=
(_expandColumn={},(0,_defineProperty2.default)(_expandColumn,_legacyUtil.INTERNAL_COL_DEFINE,{className:"".concat(prefixCls,"-expand-icon-col")}),(0,_defineProperty2.default)(_expandColumn,"title",""),(0,_defineProperty2.default)(_expandColumn,"fixed",prevColumn?prevColumn.fixed:null),(0,_defineProperty2.default)(_expandColumn,"className","".concat(prefixCls,"-row-expand-icon-cell")),(0,_defineProperty2.default)(_expandColumn,"width",columnWidth),(0,_defineProperty2.default)(_expandColumn,"render",
function(_,record,index){_=getRowKey(record,index);_=expandedKeys.has(_);index=rowExpandable?rowExpandable(record):!0;record=expandIcon({prefixCls:prefixCls,expanded:_,expandable:index,record:record,onExpand:onTriggerExpand});return expandRowByClick?React.createElement("span",{onClick:function(e){return e.stopPropagation()}},record):record}),_expandColumn);_expandColumn=baseColumns.slice();0<=expandColIndex&&_expandColumn.splice(expandColIndex,0,prevColumn);return _expandColumn}return baseColumns},
[expandable,baseColumns,getRowKey,expandedKeys,expandIcon,direction]),mergedColumns=React.useMemo(function(){var finalColumns=withExpandColumns;transformColumns&&(finalColumns=transformColumns(finalColumns));finalColumns.length||(finalColumns=[{render:function(){return null}}]);return finalColumns},[transformColumns,withExpandColumns,direction]);_ref2=React.useMemo(function(){return"rtl"===direction?revertForRtl(flatColumns(mergedColumns)):flatColumns(mergedColumns)},[mergedColumns,direction]);warningFixed(_ref2);
return[mergedColumns,_ref2]}}
//# sourceMappingURL=module$node_modules$rc_table$lib$hooks$useColumns.js.map
