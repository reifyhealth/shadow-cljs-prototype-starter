{
"version":3,
"file":"module$node_modules$lodash$padEnd.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,iCAAA,CAAsD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC1FC,cAAgBH,OAAA,CAAQ,2CAAR,CAD0E,CAE1FI,WAAaJ,OAAA,CAAQ,wCAAR,CAF6E,CAG1FK,UAAYL,OAAA,CAAQ,sCAAR,CAH8E,CAI1FM,SAAWN,OAAA,CAAQ,qCAAR,CAmCfC,OAAOC,CAAAA,OAAP,CAVAK,QAAe,CAACC,MAAD,CAASC,MAAT,CAAiBC,KAAjB,CAAwB,CACrCF,MAAA,CAASF,QAAA,CAASE,MAAT,CAGT,KAAIG,UAAY,CAFhBF,MAEgB,CAFPJ,SAAA,CAAUI,MAAV,CAEO,EAASL,UAAA,CAAWI,MAAX,CAAT,CAA8B,CAC9C,OAAQC,OAAD,EAAWE,SAAX,CAAuBF,MAAvB,CACFD,MADE;AACOL,aAAA,CAAcM,MAAd,CAAuBE,SAAvB,CAAkCD,KAAlC,CADP,CAEHF,MAPiC,CA7BuD;",
"sources":["node_modules/lodash/padEnd.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$padEnd\"] = function(global,require,module,exports) {\nvar createPadding = require('./_createPadding'),\n    stringSize = require('./_stringSize'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Pads `string` on the right side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padEnd('abc', 6);\n * // => 'abc   '\n *\n * _.padEnd('abc', 6, '_-');\n * // => 'abc_-_'\n *\n * _.padEnd('abc', 3);\n * // => 'abc'\n */\nfunction padEnd(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  return (length && strLength < length)\n    ? (string + createPadding(length - strLength, chars))\n    : string;\n}\n\nmodule.exports = padEnd;\n\n};"],
"names":["shadow$provide","global","require","module","exports","createPadding","stringSize","toInteger","toString","padEnd","string","length","chars","strLength"]
}
