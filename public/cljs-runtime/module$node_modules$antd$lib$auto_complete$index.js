shadow$provide.module$node_modules$antd$lib$auto_complete$index=function(global,require,module,exports){function isSelectOptionOrSelectOptGroup(child){return child&&child.type&&(child.type.isSelectOption||child.type.isSelectOptGroup)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),
_typeof2=module(require("module$node_modules$$babel$runtime$helpers$typeof")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),React=global(require("module$node_modules$react$index")),_toArray=module(require("module$node_modules$rc_util$lib$Children$toArray")),_classnames=module(require("module$node_modules$classnames$index")),_omit=module(require("module$node_modules$rc_util$lib$omit")),_select=module(require("module$node_modules$antd$lib$select$index")),
_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_devWarning=module(require("module$node_modules$antd$lib$_util$devWarning")),_reactNode=require("module$node_modules$antd$lib$_util$reactNode"),Option=_select["default"].Option;require=React.forwardRef(function(props,ref){var customizePrefixCls=props.prefixCls,className=props.className,children=props.children,dataSource=props.dataSource,childNodes=(0,_toArray["default"])(children),customizeInput;1===childNodes.length&&(0,
_reactNode.isValidElement)(childNodes[0])&&!isSelectOptionOrSelectOptGroup(childNodes[0])&&(customizeInput=(0,_slicedToArray2["default"])(childNodes,1)[0]);var getInputElement=customizeInput?function(){return customizeInput}:void 0;var optionChildren=childNodes.length&&isSelectOptionOrSelectOptGroup(childNodes[0])?children:dataSource?dataSource.map(function(item){if((0,_reactNode.isValidElement)(item))return item;switch((0,_typeof2["default"])(item)){case "string":return React.createElement(Option,
{key:item,value:item},item);case "object":var optionValue=item.value;return React.createElement(Option,{key:optionValue,value:optionValue},item.text);default:throw Error("AutoComplete[dataSource] only supports type `string[] | Object[]`.");}}):[];React.useEffect(function(){(0,_devWarning["default"])(!("dataSource"in props),"AutoComplete","`dataSource` is deprecated, please use `options` instead.");(0,_devWarning["default"])(!customizeInput||!("size"in props),"AutoComplete","You need to control style self instead of setting `size` when using customize input.")},
[]);return React.createElement(_configProvider.ConfigConsumer,null,function(_ref){_ref=_ref.getPrefixCls;_ref=_ref("select",customizePrefixCls);return React.createElement(_select["default"],(0,_extends2["default"])({ref:ref},(0,_omit["default"])(props,["dataSource"]),{prefixCls:_ref,className:(0,_classnames["default"])("".concat(_ref,"-auto-complete"),className),mode:_select["default"].SECRET_COMBOBOX_MODE_DO_NOT_USE,getInputElement:getInputElement}),optionChildren)})});require.Option=Option;exports["default"]=
require}
//# sourceMappingURL=module$node_modules$antd$lib$auto_complete$index.js.map
