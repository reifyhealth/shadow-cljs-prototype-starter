shadow$provide.module$node_modules$rc_tabs$lib$TabNavList$OperationNode=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),
React=global(require("module$node_modules$react$index")),_classnames=module(require("module$node_modules$classnames$index")),_KeyCode=module(require("module$node_modules$rc_util$lib$KeyCode")),_rcMenu=global(require("module$node_modules$rc_menu$lib$index")),_rcDropdown=module(require("module$node_modules$rc_dropdown$lib$index")),_AddButton=module(require("module$node_modules$rc_tabs$lib$TabNavList$AddButton"));require=React.forwardRef(function(_ref,ref){function selectOffset(offset){for(var enabledTabs=
tabs.filter(function(tab){return!tab.disabled}),selectedIndex=enabledTabs.findIndex(function(tab){return tab.key===selectedKey})||0,len=enabledTabs.length,i=0;i<len;i+=1){selectedIndex=(selectedIndex+offset+len)%len;var tab$jscomp$0=enabledTabs[selectedIndex];if(!tab$jscomp$0.disabled){setSelectedKey(tab$jscomp$0.key);break}}}function onKeyDown(e){var which=e.which;if(open)switch(which){case _KeyCode.default.UP:selectOffset(-1);e.preventDefault();break;case _KeyCode.default.DOWN:selectOffset(1);e.preventDefault();
break;case _KeyCode.default.ESC:setOpen(!1);break;case _KeyCode.default.SPACE:case _KeyCode.default.ENTER:null!==selectedKey&&onTabClick(selectedKey,e)}else[_KeyCode.default.DOWN,_KeyCode.default.SPACE,_KeyCode.default.ENTER].includes(which)&&(setOpen(!0),e.preventDefault())}var prefixCls=_ref.prefixCls,id=_ref.id,tabs=_ref.tabs,locale=_ref.locale,mobile=_ref.mobile,_ref$moreIcon=_ref.moreIcon,moreIcon=void 0===_ref$moreIcon?"More":_ref$moreIcon,moreTransitionName=_ref.moreTransitionName;_ref$moreIcon=
_ref.style;var className=_ref.className,editable=_ref.editable,tabBarGutter=_ref.tabBarGutter,rtl=_ref.rtl,onTabClick=_ref.onTabClick;_ref=(0,React.useState)(!1);_ref=(0,_slicedToArray2.default)(_ref,2);var open=_ref[0],setOpen=_ref[1];_ref=(0,React.useState)(null);_ref=(0,_slicedToArray2.default)(_ref,2);var selectedKey=_ref[0],setSelectedKey=_ref[1],popupId="".concat(id,"-more-popup");_ref="".concat(prefixCls,"-dropdown");var selectedItemId=null!==selectedKey?"".concat(popupId,"-").concat(selectedKey):
null,dropdownAriaLabel=null===locale||void 0===locale?void 0:locale.dropdownAriaLabel;dropdownAriaLabel=React.createElement(_rcMenu.default,{onClick:function(_ref2){onTabClick(_ref2.key,_ref2.domEvent);setOpen(!1)},id:popupId,tabIndex:-1,role:"listbox","aria-activedescendant":selectedItemId,selectedKeys:[selectedKey],"aria-label":void 0!==dropdownAriaLabel?dropdownAriaLabel:"expanded dropdown"},tabs.map(function(tab){return React.createElement(_rcMenu.MenuItem,{key:tab.key,id:"".concat(popupId,"-").concat(tab.key),
role:"option","aria-controls":id&&"".concat(id,"-panel-").concat(tab.key),disabled:tab.disabled},tab.tab)}));(0,React.useEffect)(function(){var ele=document.getElementById(selectedItemId);ele&&ele.scrollIntoView&&ele.scrollIntoView(!1)},[selectedKey]);(0,React.useEffect)(function(){open||setSelectedKey(null)},[open]);tabBarGutter=(0,_defineProperty2.default)({},rtl?"marginLeft":"marginRight",tabBarGutter);tabs.length||(tabBarGutter.visibility="hidden",tabBarGutter.order=1);rtl=(0,_classnames.default)((0,
_defineProperty2.default)({},"".concat(_ref,"-rtl"),rtl));mobile=mobile?null:React.createElement(_rcDropdown.default,{prefixCls:_ref,overlay:dropdownAriaLabel,trigger:["hover"],visible:open,transitionName:moreTransitionName,onVisibleChange:setOpen,overlayClassName:rtl,mouseEnterDelay:.1,mouseLeaveDelay:.1},React.createElement("button",{type:"button",className:"".concat(prefixCls,"-nav-more"),style:tabBarGutter,tabIndex:-1,"aria-hidden":"true","aria-haspopup":"listbox","aria-controls":popupId,id:"".concat(id,
"-more"),"aria-expanded":open,onKeyDown:onKeyDown},moreIcon));return React.createElement("div",{className:(0,_classnames.default)("".concat(prefixCls,"-nav-operations"),className),style:_ref$moreIcon,ref:ref},mobile,React.createElement(_AddButton.default,{prefixCls:prefixCls,locale:locale,editable:editable}))});exports.default=require}
//# sourceMappingURL=module$node_modules$rc_tabs$lib$TabNavList$OperationNode.js.map
