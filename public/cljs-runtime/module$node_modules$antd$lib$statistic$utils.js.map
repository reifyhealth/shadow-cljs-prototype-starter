{
"version":3,
"file":"module$node_modules$antd$lib$statistic$utils.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/antd/lib/statistic/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$statistic$utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatTimeStr = formatTimeStr;\nexports.formatCountdown = formatCountdown;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _padStart = _interopRequireDefault(require(\"lodash/padStart\"));\n\n// Countdown\nvar timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365], ['M', 1000 * 60 * 60 * 24 * 30], ['D', 1000 * 60 * 60 * 24], ['H', 1000 * 60 * 60], ['m', 1000 * 60], ['s', 1000], ['S', 1] // million seconds\n];\n\nfunction formatTimeStr(duration, format) {\n  var leftDuration = duration;\n  var escapeRegex = /\\[[^\\]]*]/g;\n  var keepList = (format.match(escapeRegex) || []).map(function (str) {\n    return str.slice(1, -1);\n  });\n  var templateText = format.replace(escapeRegex, '[]');\n  var replacedText = timeUnits.reduce(function (current, _ref) {\n    var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n        name = _ref2[0],\n        unit = _ref2[1];\n\n    if (current.indexOf(name) !== -1) {\n      var value = Math.floor(leftDuration / unit);\n      leftDuration -= value * unit;\n      return current.replace(new RegExp(\"\".concat(name, \"+\"), 'g'), function (match) {\n        var len = match.length;\n        return (0, _padStart[\"default\"])(value.toString(), len, '0');\n      });\n    }\n\n    return current;\n  }, templateText);\n  var index = 0;\n  return replacedText.replace(escapeRegex, function () {\n    var match = keepList[index];\n    index += 1;\n    return match;\n  });\n}\n\nfunction formatCountdown(value, config) {\n  var _config$format = config.format,\n      format = _config$format === void 0 ? '' : _config$format;\n  var target = new Date(value).getTime();\n  var current = Date.now();\n  var diff = Math.max(target - current, 0);\n  return formatTimeStr(diff, format);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","formatTimeStr","duration","format","leftDuration","escapeRegex","keepList","match","map","str","slice","templateText","replace","index","timeUnits","replacedText","reduce","current","_ref","_ref2","_slicedToArray2","name","unit","indexOf","value","Math","floor","RegExp","concat","len","length","_padStart","toString","_interopRequireDefault","Object","defineProperty","formatCountdown","config","_config$format","target","Date","getTime","now","diff","max"]
}
