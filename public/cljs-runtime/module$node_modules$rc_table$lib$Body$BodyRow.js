shadow$provide.module$node_modules$rc_table$lib$Body$BodyRow=function(global,require,module,exports){function BodyRow(props){var className=props.className,style=props.style,record=props.record,index=props.index,rowKey=props.rowKey,getRowKey=props.getRowKey,rowExpandable=props.rowExpandable,expandedKeys=props.expandedKeys,onRow=props.onRow,_props$indent=props.indent,indent=void 0===_props$indent?0:_props$indent;_props$indent=props.rowComponent;var cellComponent=props.cellComponent,childrenColumnName=
props.childrenColumnName,_React$useContext=React.useContext(_TableContext.default),prefixCls=_React$useContext.prefixCls,fixedInfoList=_React$useContext.fixedInfoList,_React$useContext2=React.useContext(_BodyContext.default);_React$useContext=_React$useContext2.fixHeader;var fixColumn=_React$useContext2.fixColumn,horizonScroll=_React$useContext2.horizonScroll,componentWidth=_React$useContext2.componentWidth,flattenColumns=_React$useContext2.flattenColumns,expandableType=_React$useContext2.expandableType,
expandRowByClick=_React$useContext2.expandRowByClick,onTriggerExpand=_React$useContext2.onTriggerExpand,rowClassName=_React$useContext2.rowClassName,expandedRowClassName=_React$useContext2.expandedRowClassName,indentSize=_React$useContext2.indentSize,expandIcon=_React$useContext2.expandIcon,expandedRowRender=_React$useContext2.expandedRowRender,expandIconColumnIndex=_React$useContext2.expandIconColumnIndex;_React$useContext2=React.useState(!1);var _React$useState2=(0,_slicedToArray2.default)(_React$useContext2,
2);_React$useContext2=_React$useState2[0];var setExpandRended=_React$useState2[1],expanded=expandedKeys&&expandedKeys.has(props.recordKey);React.useEffect(function(){expanded&&setExpandRended(!0)},[expanded]);rowExpandable="row"===expandableType&&(!rowExpandable||rowExpandable(record));var nestExpandable="nest"===expandableType,hasNestChildren=childrenColumnName&&record&&record[childrenColumnName],mergedExpandable=rowExpandable||nestExpandable,additionalProps;onRow&&(additionalProps=onRow(record,
index));var computeRowClassName;"string"===typeof rowClassName?computeRowClassName=rowClassName:"function"===typeof rowClassName&&(computeRowClassName=rowClassName(record,index,indent));var columnsKey=(0,_valueUtil.getColumnsKey)(flattenColumns);className=React.createElement(_props$indent,(0,_extends2.default)({},additionalProps,{"data-row-key":rowKey,className:(0,_classnames.default)(className,"".concat(prefixCls,"-row"),"".concat(prefixCls,"-row-level-").concat(indent),computeRowClassName,additionalProps&&
additionalProps.className),style:(0,_objectSpread2.default)((0,_objectSpread2.default)({},style),additionalProps?additionalProps.style:null),onClick:function(event){expandRowByClick&&mergedExpandable&&onTriggerExpand(record,event);if(additionalProps&&additionalProps.onClick){for(var _additionalProps,_len=arguments.length,args=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];(_additionalProps=additionalProps).onClick.apply(_additionalProps,[event].concat(args))}}}),flattenColumns.map(function(column,
colIndex){var render=column.render,dataIndex=column.dataIndex,columnClassName=column.className,key=columnsKey[colIndex],fixedInfo=fixedInfoList[colIndex],appendCellNode;colIndex===(expandIconColumnIndex||0)&&nestExpandable&&(appendCellNode=React.createElement(React.Fragment,null,React.createElement("span",{style:{paddingLeft:"".concat(indentSize*indent,"px")},className:"".concat(prefixCls,"-row-indent indent-level-").concat(indent)}),expandIcon({prefixCls:prefixCls,expanded:expanded,expandable:hasNestChildren,
record:record,onExpand:onTriggerExpand})));var additionalCellProps;column.onCell&&(additionalCellProps=column.onCell(record,index));return React.createElement(_Cell.default,(0,_extends2.default)({className:columnClassName,ellipsis:column.ellipsis,align:column.align,component:cellComponent,prefixCls:prefixCls,key:key,record:record,index:index,dataIndex:dataIndex,render:render,shouldCellUpdate:column.shouldCellUpdate},fixedInfo,{appendNode:appendCellNode,additionalProps:additionalCellProps}))}));if(rowExpandable&&
(_React$useContext2||expanded)){var expandRowNode=expandedRowRender(record,index,indent+1,expanded);style=expandedRowClassName&&expandedRowClassName(record,index,indent);expandRowNode=React.createElement(_ExpandedRow.default,{expanded:expanded,className:(0,_classnames.default)("".concat(prefixCls,"-expanded-row"),"".concat(prefixCls,"-expanded-row-level-").concat(indent+1),style),prefixCls:prefixCls,fixHeader:_React$useContext,fixColumn:fixColumn,horizonScroll:horizonScroll,component:_props$indent,
componentWidth:componentWidth,cellComponent:cellComponent,colSpan:flattenColumns.length},expandRowNode)}var nestRowNode;hasNestChildren&&expanded&&(nestRowNode=(record[childrenColumnName]||[]).map(function(subRecord,subIndex){var subKey=getRowKey(subRecord,subIndex);return React.createElement(BodyRow,(0,_extends2.default)({},props,{key:subKey,rowKey:subKey,record:subRecord,recordKey:subKey,index:subIndex,indent:indent+1}))}));return React.createElement(React.Fragment,null,className,expandRowNode,
nestRowNode)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),
React=global(require("module$node_modules$react$index")),_classnames=module(require("module$node_modules$classnames$index")),_Cell=module(require("module$node_modules$rc_table$lib$Cell$index")),_TableContext=module(require("module$node_modules$rc_table$lib$context$TableContext")),_BodyContext=module(require("module$node_modules$rc_table$lib$context$BodyContext")),_valueUtil=require("module$node_modules$rc_table$lib$utils$valueUtil"),_ExpandedRow=module(require("module$node_modules$rc_table$lib$Body$ExpandedRow"));
BodyRow.displayName="BodyRow";exports.default=BodyRow}
//# sourceMappingURL=module$node_modules$rc_table$lib$Body$BodyRow.js.map
