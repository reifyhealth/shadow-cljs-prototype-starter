shadow$provide.module$node_modules$rc_picker$lib$panels$TimePanel$TimeBody=function(global,require,module,exports){function shouldUnitsUpdate(prevUnits,nextUnits){if(prevUnits.length!==nextUnits.length)return!0;for(var i=0;i<prevUnits.length;i+=1)if(prevUnits[i].disabled!==nextUnits[i].disabled)return!0;return!1}function generateUnits(start,end,step,disabledUnits){for(var units=[];start<=end;start+=step)units.push({label:(0,_miscUtil.leftPad)(start,2),value:start,disabled:(disabledUnits||[]).includes(start)});
return units}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),React=global(require("module$node_modules$react$index")),
_useMemo=module(require("module$node_modules$rc_util$lib$hooks$useMemo")),_TimeUnitColumn=module(require("module$node_modules$rc_picker$lib$panels$TimePanel$TimeUnitColumn")),_miscUtil=require("module$node_modules$rc_picker$lib$utils$miscUtil"),_timeUtil=require("module$node_modules$rc_picker$lib$utils$timeUtil");exports.default=function(props){function addColumnNode(condition,node,columnValue,units,onColumnSelect){!1!==condition&&columns.push({node:React.cloneElement(node,{prefixCls:columnPrefixCls,
value:columnValue,active:activeColumnIndex===columns.length,onSelect:onColumnSelect,units:units,hideDisabledOptions:hideDisabledOptions}),onSelect:onColumnSelect,value:columnValue,units:units})}var generateConfig=props.generateConfig,prefixCls=props.prefixCls,operationRef=props.operationRef,activeColumnIndex=props.activeColumnIndex,value=props.value,showHour=props.showHour,showMinute=props.showMinute,showSecond=props.showSecond,use12Hours=props.use12Hours,_props$hourStep=props.hourStep,hourStep=void 0===
_props$hourStep?1:_props$hourStep;_props$hourStep=props.minuteStep;_props$hourStep=void 0===_props$hourStep?1:_props$hourStep;var _props$secondStep=props.secondStep;_props$secondStep=void 0===_props$secondStep?1:_props$secondStep;var disabledHours=props.disabledHours,disabledMinutes=props.disabledMinutes,disabledSeconds=props.disabledSeconds,hideDisabledOptions=props.hideDisabledOptions,onSelect=props.onSelect,columns=[];props="".concat(prefixCls,"-content");var columnPrefixCls="".concat(prefixCls,
"-time-panel"),hour=prefixCls=value?generateConfig.getHour(value):-1,minute=value?generateConfig.getMinute(value):-1,second=value?generateConfig.getSecond(value):-1,setTime=function(isNewPM,newHour,newMinute,newSecond){var newDate=value||generateConfig.getNow();newHour=Math.max(0,newHour);newMinute=Math.max(0,newMinute);newSecond=Math.max(0,newSecond);return newDate=(0,_timeUtil.setTime)(generateConfig,newDate,use12Hours&&isNewPM?newHour+12:newHour,newMinute,newSecond)},rawHours=generateUnits(0,23,
hourStep,disabledHours&&disabledHours()),memorizedRawHours=(0,_useMemo.default)(function(){return rawHours},rawHours,shouldUnitsUpdate);if(use12Hours){var isPM=12<=hour;hour%=12}hourStep=React.useMemo(function(){if(!use12Hours)return[!1,!1];var AMPMDisabled=[!0,!0];memorizedRawHours.forEach(function(_ref){_ref.disabled||(12<=_ref.value?AMPMDisabled[1]=!1:AMPMDisabled[0]=!1)});return AMPMDisabled},[use12Hours,memorizedRawHours]);disabledHours=(0,_slicedToArray2.default)(hourStep,2);hourStep=disabledHours[0];
disabledHours=disabledHours[1];var hours=React.useMemo(function(){return use12Hours?memorizedRawHours.filter(isPM?function(hourMeta){return 12<=hourMeta.value}:function(hourMeta){return 12>hourMeta.value}).map(function(hourMeta){var hourValue=hourMeta.value%12,hourLabel=0===hourValue?"12":(0,_miscUtil.leftPad)(hourValue,2);return(0,_objectSpread2.default)((0,_objectSpread2.default)({},hourMeta),{},{label:hourLabel,value:hourValue})}):memorizedRawHours},[use12Hours,isPM,memorizedRawHours]);_props$hourStep=
generateUnits(0,59,_props$hourStep,disabledMinutes&&disabledMinutes(prefixCls));_props$secondStep=generateUnits(0,59,_props$secondStep,disabledSeconds&&disabledSeconds(prefixCls,minute));operationRef.current={onUpDown:function(diff){var column=columns[activeColumnIndex];if(column)for(var valueIndex=column.units.findIndex(function(unit){return unit.value===column.value}),unitLen=column.units.length,i=1;i<unitLen;i+=1){var nextUnit=column.units[(valueIndex+diff*i+unitLen)%unitLen];if(!0!==nextUnit.disabled){column.onSelect(nextUnit.value);
break}}}};addColumnNode(showHour,React.createElement(_TimeUnitColumn.default,{key:"hour"}),hour,hours,function(num){onSelect(setTime(isPM,num,minute,second),"mouse")});addColumnNode(showMinute,React.createElement(_TimeUnitColumn.default,{key:"minute"}),minute,_props$hourStep,function(num){onSelect(setTime(isPM,hour,num,second),"mouse")});addColumnNode(showSecond,React.createElement(_TimeUnitColumn.default,{key:"second"}),second,_props$secondStep,function(num){onSelect(setTime(isPM,hour,minute,num),
"mouse")});operationRef=-1;"boolean"===typeof isPM&&(operationRef=isPM?1:0);addColumnNode(!0===use12Hours,React.createElement(_TimeUnitColumn.default,{key:"12hours"}),operationRef,[{label:"AM",value:0,disabled:hourStep},{label:"PM",value:1,disabled:disabledHours}],function(num){onSelect(setTime(!!num,hour,minute,second),"mouse")});return React.createElement("div",{className:props},columns.map(function(_ref2){return _ref2.node}))}}
//# sourceMappingURL=module$node_modules$rc_picker$lib$panels$TimePanel$TimeBody.js.map
