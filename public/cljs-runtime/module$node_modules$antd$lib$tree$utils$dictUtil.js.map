{
"version":3,
"file":"module$node_modules$antd$lib$tree$utils$dictUtil.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/antd/lib/tree/utils/dictUtil.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$tree$utils$dictUtil\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcRangeKeys = calcRangeKeys;\nexports.convertDirectoryKeysToNodes = convertDirectoryKeysToNodes;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar Record;\n\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {}));\n\nfunction traverseNodesKey(treeData, callback) {\n  function processNode(dataNode) {\n    var key = dataNode.key,\n        children = dataNode.children;\n\n    if (callback(key, dataNode) !== false) {\n      traverseNodesKey(children || [], callback);\n    }\n  }\n\n  treeData.forEach(processNode);\n}\n/** \u8ba1\u7b97\u9009\u4e2d\u8303\u56f4\uff0c\u53ea\u8003\u8651expanded\u60c5\u51b5\u4ee5\u4f18\u5316\u6027\u80fd */\n\n\nfunction calcRangeKeys(_ref) {\n  var treeData = _ref.treeData,\n      expandedKeys = _ref.expandedKeys,\n      startKey = _ref.startKey,\n      endKey = _ref.endKey;\n  var keys = [];\n  var record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(treeData, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n  return keys;\n}\n\nfunction convertDirectoryKeysToNodes(treeData, keys) {\n  var restKeys = (0, _toConsumableArray2[\"default\"])(keys);\n  var nodes = [];\n  traverseNodesKey(treeData, function (key, node) {\n    var index = restKeys.indexOf(key);\n\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n\n    return !!restKeys.length;\n  });\n  return nodes;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","traverseNodesKey","treeData","callback","forEach","processNode","dataNode","children","key","_interopRequireDefault","Object","defineProperty","value","calcRangeKeys","_ref","expandedKeys","startKey","endKey","keys","record","Record","None","End","push","Start","indexOf","convertDirectoryKeysToNodes","restKeys","_toConsumableArray2","nodes","node","index","splice","length"]
}
