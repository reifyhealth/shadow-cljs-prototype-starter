shadow$provide.module$node_modules$antd$lib$back_top$index=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),
_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),React=global(require("module$node_modules$react$index")),_rcMotion=module(require("module$node_modules$rc_motion$lib$index")),_addEventListener=module(require("module$node_modules$rc_util$lib$Dom$addEventListener")),_useMergedState3=module(require("module$node_modules$rc_util$lib$hooks$useMergedState")),_classnames=module(require("module$node_modules$classnames$index")),_omit=module(require("module$node_modules$rc_util$lib$omit")),
_VerticalAlignTopOutlined=module(require("module$node_modules$$ant_design$icons$VerticalAlignTopOutlined")),_throttleByAnimationFrame=require("module$node_modules$antd$lib$_util$throttleByAnimationFrame"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_getScroll=module(require("module$node_modules$antd$lib$_util$getScroll")),_scrollTo=module(require("module$node_modules$antd$lib$_util$scrollTo")),_reactNode=require("module$node_modules$antd$lib$_util$reactNode");require=
function(props){var _useMergedState=(0,_useMergedState3["default"])(!1,{value:props.visible});_useMergedState=(0,_slicedToArray2["default"])(_useMergedState,2);var visible=_useMergedState[0],setVisible=_useMergedState[1],ref=React.createRef(),scrollEvent=React.useRef(),getDefaultTarget=function(){return ref.current&&ref.current.ownerDocument?ref.current.ownerDocument:window},handleScroll=(0,_throttleByAnimationFrame.throttleByAnimationFrame)(function(e){var visibilityHeight=props.visibilityHeight;
e=(0,_getScroll["default"])(e.target,!0);setVisible(e>visibilityHeight)}),bindScrollEvent=function(){var container=(props.target||getDefaultTarget)();scrollEvent.current=(0,_addEventListener["default"])(container,"scroll",function(e){handleScroll(e)});handleScroll({target:container})};React.useEffect(function(){bindScrollEvent();return function(){scrollEvent.current&&scrollEvent.current.remove();handleScroll.cancel()}},[props.target]);_useMergedState=React.useContext(_configProvider.ConfigContext);
var getPrefixCls=_useMergedState.getPrefixCls,direction=_useMergedState.direction;_useMergedState=props.className;var className=void 0===_useMergedState?"":_useMergedState;_useMergedState=getPrefixCls("back-top",props.prefixCls);getPrefixCls=getPrefixCls();direction=(0,_classnames["default"])(_useMergedState,(0,_defineProperty2["default"])({},"".concat(_useMergedState,"-rtl"),"rtl"===direction),className);className=(0,_omit["default"])(props,"prefixCls className children visibilityHeight target visible".split(" "));
return React.createElement("div",(0,_extends2["default"])({},className,{className:direction,onClick:function(e){var onClick=props.onClick,target=props.target,_props$duration=props.duration;_props$duration=void 0===_props$duration?450:_props$duration;(0,_scrollTo["default"])(0,{getContainer:target||getDefaultTarget,duration:_props$duration});"function"===typeof onClick&&onClick(e)},ref:ref}),function(_ref){var prefixCls=_ref.prefixCls;_ref=_ref.rootPrefixCls;var children=props.children,defaultElement=
React.createElement("div",{className:"".concat(prefixCls,"-content")},React.createElement("div",{className:"".concat(prefixCls,"-icon")},React.createElement(_VerticalAlignTopOutlined["default"],null)));return React.createElement(_rcMotion["default"],{visible:visible,motionName:"".concat(_ref,"-fade"),removeOnLeave:!0},function(_ref2){var motionClassName=_ref2.className;_ref2=children||defaultElement;return React.createElement("div",null,(0,_reactNode.cloneElement)(_ref2,function(_ref3){_ref3=_ref3.className;
return{className:(0,_classnames["default"])(motionClassName,_ref3)}}))})}({prefixCls:_useMergedState,rootPrefixCls:getPrefixCls}))};require.defaultProps={visibilityHeight:400};require=React.memo(require);exports["default"]=require}
//# sourceMappingURL=module$node_modules$antd$lib$back_top$index.js.map
