{
"version":3,
"file":"module$node_modules$copy_to_clipboard$index.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAaxGC,QAASA,OAAM,CAACC,OAAD,CAAU,CACvB,IAAIC,SAAW,WAAYC,CAAAA,IAAZ,CAAiBC,SAAUC,CAAAA,SAA3B,CAAA,CAAwC,GAAxC,CAA8C,MAAzDH,EAAmE,IACvE,OAAOD,QAAQK,CAAAA,OAAR,CAAgB,eAAhB,CAAiCJ,OAAjC,CAFgB,CAVzB,IAAIK,gBAAkBV,OAAA,CAAQ,4CAAR,CAAtB,CAEIW,0BAA4B,CAC9B,aAAc,MADgB,CAE9B,YAAa,KAFiB,CAG9B,UAAW,MAHmB,CA4GhCV,OAAOC,CAAAA,OAAP,CA/FAU,QAAa,CAACC,IAAD,CAAOC,OAAP,CAAgB,CAAA,IAOzBC,QAAU,CAAA,CACPD,QAAL,GACEA,OADF,CACY,EADZ,CAGA,KAAAE,MAAQF,OAAQE,CAAAA,KAAhBA,EAAyB,CAAA,CACzB,IAAI,CACF,IAAAC;AAAmBP,eAAA,EAEnB,KAAAQ,MAAQC,QAASC,CAAAA,WAAT,EACR,KAAAC,UAAYF,QAASG,CAAAA,YAAT,EAEZ,KAAAC,KAAOJ,QAASK,CAAAA,aAAT,CAAuB,MAAvB,CACPD,KAAKE,CAAAA,WAAL,CAAmBZ,IAEnBU,KAAKG,CAAAA,KAAMC,CAAAA,GAAX,CAAiB,OAEjBJ,KAAKG,CAAAA,KAAME,CAAAA,QAAX,CAAsB,OACtBL,KAAKG,CAAAA,KAAMG,CAAAA,GAAX,CAAiB,CACjBN,KAAKG,CAAAA,KAAMI,CAAAA,IAAX,CAAkB,kBAElBP,KAAKG,CAAAA,KAAMK,CAAAA,UAAX,CAAwB,KAExBR,KAAKG,CAAAA,KAAMM,CAAAA,gBAAX,CAA8B,MAC9BT,KAAKG,CAAAA,KAAMO,CAAAA,aAAX,CAA2B,MAC3BV,KAAKG,CAAAA,KAAMQ,CAAAA,YAAX,CAA0B,MAC1BX,KAAKG,CAAAA,KAAMS,CAAAA,UAAX,CAAwB,MACxBZ,KAAKa,CAAAA,gBAAL,CAAsB,MAAtB,CAA8B,QAAQ,CAACC,CAAD,CAAI,CACxCA,CAAEC,CAAAA,eAAF,EACIxB,QAAQX,CAAAA,MAAZ,GACEkC,CAAEE,CAAAA,cAAF,EACA;AAA+B,WAA/B,GAAI,MAAOF,EAAEG,CAAAA,aAAb,EACExB,KAIA,EAJSyB,OAAQC,CAAAA,IAAR,CAAa,+BAAb,CAIT,CAHA1B,KAGA,EAHSyB,OAAQC,CAAAA,IAAR,CAAa,0BAAb,CAGT,CAFAC,MAAOH,CAAAA,aAAcI,CAAAA,SAArB,EAEA,CAAAD,MAAOH,CAAAA,aAAcK,CAAAA,OAArB,CADalC,yBAAA,CAA0BG,OAAQX,CAAAA,MAAlC,CACb,EAD0DQ,yBAAA,CAA0B,SAA1B,CAC1D,CAAqCE,IAArC,CALF,GAOEwB,CAAEG,CAAAA,aAAcI,CAAAA,SAAhB,EACA,CAAAP,CAAEG,CAAAA,aAAcK,CAAAA,OAAhB,CAAwB/B,OAAQX,CAAAA,MAAhC,CAAwCU,IAAxC,CARF,CAFF,CAaIC,QAAQgC,CAAAA,MAAZ,GACET,CAAEE,CAAAA,cAAF,EACA,CAAAzB,OAAQgC,CAAAA,MAAR,CAAeT,CAAEG,CAAAA,aAAjB,CAFF,CAfwC,CAA1C,CAqBArB,SAAS4B,CAAAA,IAAKC,CAAAA,WAAd,CAA0BzB,IAA1B,CAEAL,MAAM+B,CAAAA,kBAAN,CAAyB1B,IAAzB,CACAF,UAAU6B,CAAAA,QAAV,CAAmBhC,KAAnB,CAGA;GAAI,CADaC,QAASgC,CAAAA,WAATC,CAAqB,MAArBA,CACjB,CACE,KAAUC,MAAJ,CAAU,+BAAV,CAAN,CAEFtC,OAAA,CAAU,CAAA,CAnDR,CAoDF,MAAOuC,MAAP,CAAY,CACZtC,KAAA,EAASyB,OAAQc,CAAAA,KAAR,CAAc,oCAAd,CAAoDD,MAApD,CACTtC,MAAA,EAASyB,OAAQC,CAAAA,IAAR,CAAa,0BAAb,CACT,IAAI,CACFC,MAAOH,CAAAA,aAAcK,CAAAA,OAArB,CAA6B/B,OAAQX,CAAAA,MAArC,EAA+C,MAA/C,CAAuDU,IAAvD,CAEA,CADAC,OAAQgC,CAAAA,MACR,EADkBhC,OAAQgC,CAAAA,MAAR,CAAeH,MAAOH,CAAAA,aAAtB,CAClB,CAAAzB,OAAA,CAAU,CAAA,CAHR,CAIF,MAAOuC,GAAP,CAAY,CACZtC,KAAA,EAASyB,OAAQc,CAAAA,KAAR,CAAc,sCAAd,CAAsDD,GAAtD,CACTtC,MAAA,EAASyB,OAAQc,CAAAA,KAAR,CAAc,wBAAd,CACT,KAAAnD,QAAUD,MAAA,CAAO,SAAA,EAAaW,QAAb;AAAuBA,OAAQV,CAAAA,OAA/B,CAjFFoD,kCAiFL,CACVb,OAAOc,CAAAA,MAAP,CAAcrD,OAAd,CAAuBS,IAAvB,CAJY,CAPF,CApDd,OAiEU,CACJQ,SAWJ,GAVsC,UAApC,EAAI,MAAOA,UAAUqC,CAAAA,WAArB,CACErC,SAAUqC,CAAAA,WAAV,CAAsBxC,KAAtB,CADF,CAGEG,SAAUsC,CAAAA,eAAV,EAOJ,EAHIpC,IAGJ,EAFEJ,QAAS4B,CAAAA,IAAKa,CAAAA,WAAd,CAA0BrC,IAA1B,CAEF,CAAAN,gBAAA,EAZQ,CAeV,MAAOF,QA5FoB,CAlB2E;",
"sources":["node_modules/copy-to-clipboard/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$copy_to_clipboard$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"\u2318\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n\n};"],
"names":["shadow$provide","global","require","module","exports","format","message","copyKey","test","navigator","userAgent","replace","deselectCurrent","clipboardToIE11Formatting","copy","text","options","success","debug","reselectPrevious","range","document","createRange","selection","getSelection","mark","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","successful","Error","err","error","defaultMessage","prompt","removeRange","removeAllRanges","removeChild"]
}
