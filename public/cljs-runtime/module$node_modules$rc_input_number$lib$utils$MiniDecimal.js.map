{
"version":3,
"file":"module$node_modules$rc_input_number$lib$utils$MiniDecimal.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/rc-input-number/lib/utils/MiniDecimal.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_input_number$lib$utils$MiniDecimal\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getMiniDecimal;\nexports.toFixed = toFixed;\nexports.BigIntDecimal = exports.NumberDecimal = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _numberUtil = require(\"./numberUtil\");\n\nvar _supportUtil = require(\"./supportUtil\");\n\n/* eslint-disable max-classes-per-file */\n\n/**\n * We can remove this when IE not support anymore\n */\nvar NumberDecimal = /*#__PURE__*/function () {\n  function NumberDecimal(value) {\n    (0, _classCallCheck2.default)(this, NumberDecimal);\n    this.origin = '';\n\n    if (!value && value !== 0 || !String(value).trim()) {\n      this.empty = true;\n      return;\n    }\n\n    this.origin = String(value);\n    this.number = Number(value);\n  }\n\n  (0, _createClass2.default)(NumberDecimal, [{\n    key: \"negate\",\n    value: function negate() {\n      return new NumberDecimal(-this.toNumber());\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      if (this.isInvalidate()) {\n        return new NumberDecimal(value);\n      }\n\n      var target = Number(value);\n\n      if (Number.isNaN(target)) {\n        return this;\n      }\n\n      var number = this.number + target; // [Legacy] Back to safe integer\n\n      if (number > Number.MAX_SAFE_INTEGER) {\n        return new NumberDecimal(Number.MAX_SAFE_INTEGER);\n      }\n\n      if (number < Number.MIN_SAFE_INTEGER) {\n        return new NumberDecimal(Number.MIN_SAFE_INTEGER);\n      }\n\n      var maxPrecision = Math.max((0, _numberUtil.getNumberPrecision)(this.number), (0, _numberUtil.getNumberPrecision)(target));\n      return new NumberDecimal(number.toFixed(maxPrecision));\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.empty;\n    }\n  }, {\n    key: \"isNaN\",\n    value: function isNaN() {\n      return Number.isNaN(this.number);\n    }\n  }, {\n    key: \"isInvalidate\",\n    value: function isInvalidate() {\n      return this.isEmpty() || this.isNaN();\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(target) {\n      return this.toNumber() === (target === null || target === void 0 ? void 0 : target.toNumber());\n    }\n  }, {\n    key: \"lessEquals\",\n    value: function lessEquals(target) {\n      return this.add(target.negate().toString()).toNumber() <= 0;\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      return this.number;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var safe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this.isInvalidate()) {\n        return safe ? '' : this.origin;\n      }\n\n      return (0, _numberUtil.num2str)(this.number);\n    }\n  }]);\n  return NumberDecimal;\n}();\n\nexports.NumberDecimal = NumberDecimal;\n\nvar BigIntDecimal = /*#__PURE__*/function () {\n  function BigIntDecimal(value) {\n    (0, _classCallCheck2.default)(this, BigIntDecimal);\n    this.origin = '';\n\n    if (!value && value !== 0 || !String(value).trim()) {\n      this.empty = true;\n      return;\n    }\n\n    this.origin = String(value); // Act like Number convert\n\n    if (value === '-') {\n      this.nan = true;\n      return;\n    }\n\n    var mergedValue = value; // We need convert back to Number since it require `toFixed` to handle this\n\n    if ((0, _numberUtil.isE)(mergedValue)) {\n      mergedValue = Number(mergedValue);\n    }\n\n    mergedValue = typeof mergedValue === 'string' ? mergedValue : (0, _numberUtil.num2str)(mergedValue);\n\n    if ((0, _numberUtil.validateNumber)(mergedValue)) {\n      var trimRet = (0, _numberUtil.trimNumber)(mergedValue);\n      this.negative = trimRet.negative;\n      var numbers = trimRet.trimStr.split('.');\n      this.integer = BigInt(numbers[0]);\n      var decimalStr = numbers[1] || '0';\n      this.decimal = BigInt(decimalStr);\n      this.decimalLen = decimalStr.length;\n    } else {\n      this.nan = true;\n    }\n  }\n\n  (0, _createClass2.default)(BigIntDecimal, [{\n    key: \"getMark\",\n    value: function getMark() {\n      return this.negative ? '-' : '';\n    }\n  }, {\n    key: \"getIntegerStr\",\n    value: function getIntegerStr() {\n      return this.integer.toString();\n    }\n  }, {\n    key: \"getDecimalStr\",\n    value: function getDecimalStr() {\n      return this.decimal.toString().padStart(this.decimalLen, '0');\n    }\n    /**\n     * Align BigIntDecimal with same decimal length. e.g. 12.3 + 5 = 1230000\n     * This is used for add function only.\n     */\n\n  }, {\n    key: \"alignDecimal\",\n    value: function alignDecimal(decimalLength) {\n      var str = \"\".concat(this.getMark()).concat(this.getIntegerStr()).concat(this.getDecimalStr().padEnd(decimalLength, '0'));\n      return BigInt(str);\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      var clone = new BigIntDecimal(this.toString());\n      clone.negative = !clone.negative;\n      return clone;\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      if (this.isInvalidate()) {\n        return new BigIntDecimal(value);\n      }\n\n      var offset = new BigIntDecimal(value);\n\n      if (offset.isInvalidate()) {\n        return this;\n      }\n\n      var maxDecimalLength = Math.max(this.getDecimalStr().length, offset.getDecimalStr().length);\n      var myAlignedDecimal = this.alignDecimal(maxDecimalLength);\n      var offsetAlignedDecimal = offset.alignDecimal(maxDecimalLength);\n      var valueStr = (myAlignedDecimal + offsetAlignedDecimal).toString(); // We need fill string length back to `maxDecimalLength` to avoid parser failed\n\n      var _trimNumber = (0, _numberUtil.trimNumber)(valueStr),\n          negativeStr = _trimNumber.negativeStr,\n          trimStr = _trimNumber.trimStr;\n\n      var hydrateValueStr = \"\".concat(negativeStr).concat(trimStr.padStart(maxDecimalLength + 1, '0'));\n      return new BigIntDecimal(\"\".concat(hydrateValueStr.slice(0, -maxDecimalLength), \".\").concat(hydrateValueStr.slice(-maxDecimalLength)));\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.empty;\n    }\n  }, {\n    key: \"isNaN\",\n    value: function isNaN() {\n      return this.nan;\n    }\n  }, {\n    key: \"isInvalidate\",\n    value: function isInvalidate() {\n      return this.isEmpty() || this.isNaN();\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(target) {\n      return this.toString() === (target === null || target === void 0 ? void 0 : target.toString());\n    }\n  }, {\n    key: \"lessEquals\",\n    value: function lessEquals(target) {\n      return this.add(target.negate().toString()).toNumber() <= 0;\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      if (this.isNaN()) {\n        return NaN;\n      }\n\n      return Number(this.toString());\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var safe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this.isInvalidate()) {\n        return safe ? '' : this.origin;\n      }\n\n      return (0, _numberUtil.trimNumber)(\"\".concat(this.getMark()).concat(this.getIntegerStr(), \".\").concat(this.getDecimalStr())).fullStr;\n    }\n  }]);\n  return BigIntDecimal;\n}();\n\nexports.BigIntDecimal = BigIntDecimal;\n\nfunction getMiniDecimal(value) {\n  // We use BigInt here.\n  // Will fallback to Number if not support.\n  if ((0, _supportUtil.supportBigInt)()) {\n    return new BigIntDecimal(value);\n  }\n\n  return new NumberDecimal(value);\n}\n/**\n * Align the logic of toFixed to around like 1.5 => 2\n */\n\n\nfunction toFixed(numStr, separatorStr, precision) {\n  var _trimNumber2 = (0, _numberUtil.trimNumber)(numStr),\n      negativeStr = _trimNumber2.negativeStr,\n      integerStr = _trimNumber2.integerStr,\n      decimalStr = _trimNumber2.decimalStr;\n\n  var precisionDecimalStr = \"\".concat(separatorStr).concat(decimalStr);\n  var numberWithoutDecimal = \"\".concat(negativeStr).concat(integerStr);\n\n  if (precision >= 0) {\n    // We will get last + 1 number to check if need advanced number\n    var advancedNum = Number(decimalStr[precision]);\n\n    if (advancedNum >= 5) {\n      var advancedDecimal = getMiniDecimal(numStr).add(\"0.\".concat('0'.repeat(precision)).concat(10 - advancedNum));\n      return toFixed(advancedDecimal.toString(), separatorStr, precision);\n    }\n\n    if (precision === 0) {\n      return numberWithoutDecimal;\n    }\n\n    return \"\".concat(numberWithoutDecimal).concat(separatorStr).concat(decimalStr.padEnd(precision, '0').slice(0, precision));\n  }\n\n  if (precisionDecimalStr === '.0') {\n    return numberWithoutDecimal;\n  }\n\n  return \"\".concat(numberWithoutDecimal).concat(precisionDecimalStr);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getMiniDecimal","value","_supportUtil","supportBigInt","BigIntDecimal","NumberDecimal","toFixed","numStr","separatorStr","precision","_trimNumber2","_numberUtil","trimNumber","negativeStr","integerStr","decimalStr","precisionDecimalStr","concat","numberWithoutDecimal","advancedNum","Number","advancedDecimal","add","repeat","toString","padEnd","slice","_interopRequireDefault","Object","defineProperty","default","_classCallCheck2","_createClass2","origin","String","trim","empty","number","key","negate","toNumber","isInvalidate","target","isNaN","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","maxPrecision","Math","max","getNumberPrecision","isEmpty","equals","lessEquals","safe","arguments","length","undefined","num2str","nan","isE","mergedValue","validateNumber","trimRet","negative","numbers","trimStr","split","integer","BigInt","decimal","decimalLen","getMark","getIntegerStr","getDecimalStr","padStart","alignDecimal","decimalLength","str","clone","offset","maxDecimalLength","myAlignedDecimal","offsetAlignedDecimal","valueStr","_trimNumber","hydrateValueStr","NaN","fullStr"]
}
