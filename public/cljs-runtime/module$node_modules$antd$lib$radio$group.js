shadow$provide.module$node_modules$antd$lib$radio$group=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),
React=global(require("module$node_modules$react$index")),_classnames=module(require("module$node_modules$classnames$index")),_useMergedState3=module(require("module$node_modules$rc_util$lib$hooks$useMergedState")),_radio=module(require("module$node_modules$antd$lib$radio$radio")),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_SizeContext=module(require("module$node_modules$antd$lib$config_provider$SizeContext")),_context=require("module$node_modules$antd$lib$radio$context");
require=React.forwardRef(function(props,ref){var _React$useContext=React.useContext(_configProvider.ConfigContext),getPrefixCls=_React$useContext.getPrefixCls,direction=_React$useContext.direction,size=React.useContext(_SizeContext["default"]);_React$useContext=(0,_useMergedState3["default"])(props.defaultValue,{value:props.value});_React$useContext=(0,_slicedToArray2["default"])(_React$useContext,2);var value=_React$useContext[0],setValue=_React$useContext[1];return React.createElement(_context.RadioGroupContextProvider,
{value:{onChange:function(ev){var val=ev.target.value;"value"in props||setValue(val);var onChange=props.onChange;onChange&&val!==value&&onChange(ev)},value:value,disabled:props.disabled,name:props.name}},function(){var _classNames,_props$className=props.className;_props$className=void 0===_props$className?"":_props$className;var options=props.options,optionType=props.optionType,_props$buttonStyle=props.buttonStyle,buttonStyle=void 0===_props$buttonStyle?"outline":_props$buttonStyle,disabled=props.disabled,
children=props.children,customizeSize=props.size;_props$buttonStyle=props.style;var id=props.id,onMouseEnter=props.onMouseEnter,onMouseLeave=props.onMouseLeave,prefixCls=getPrefixCls("radio",props.prefixCls),groupPrefixCls="".concat(prefixCls,"-group");if(options&&0<options.length){var optionsPrefixCls="button"===optionType?"".concat(prefixCls,"-button"):prefixCls;children=options.map(function(option){return"string"===typeof option?React.createElement(_radio["default"],{key:option,prefixCls:optionsPrefixCls,
disabled:disabled,value:option,checked:value===option},option):React.createElement(_radio["default"],{key:"radio-group-value-options-".concat(option.value),prefixCls:optionsPrefixCls,disabled:option.disabled||disabled,value:option.value,checked:value===option.value,style:option.style},option.label)})}options=customizeSize||size;_props$className=(0,_classnames["default"])(groupPrefixCls,"".concat(groupPrefixCls,"-").concat(buttonStyle),(_classNames={},(0,_defineProperty2["default"])(_classNames,"".concat(groupPrefixCls,
"-").concat(options),options),(0,_defineProperty2["default"])(_classNames,"".concat(groupPrefixCls,"-rtl"),"rtl"===direction),_classNames),_props$className);return React.createElement("div",{className:_props$className,style:_props$buttonStyle,onMouseEnter:onMouseEnter,onMouseLeave:onMouseLeave,id:id,ref:ref},children)}())});require=React.memo(require);exports["default"]=require}
//# sourceMappingURL=module$node_modules$antd$lib$radio$group.js.map
