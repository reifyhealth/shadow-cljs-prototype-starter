{
"version":3,
"file":"module$node_modules$rc_upload$lib$attr_accept.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,6CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAmCvBJ,QAAQI,CAAAA,OAAR,CA7BeC,QAAiB,CAACC,IAAD,CAAOC,aAAP,CAAsB,CACpD,GAAID,IAAJ,EAAYC,aAAZ,CAA2B,CACrBC,aAAAA,CAAqBC,KAAMC,CAAAA,OAAN,CAAcH,aAAd,CAAA,CAA+BA,aAA/B,CAA+CA,aAAcI,CAAAA,KAAd,CAAoB,GAApB,CACxE,KAAIC,SAAWN,IAAKO,CAAAA,IAAhBD,EAAwB,EAA5B,CACIE,SAAWR,IAAKS,CAAAA,IAAhBD,EAAwB,EAD5B,CAEIE,aAAeF,QAASG,CAAAA,OAAT,CAAiB,OAAjB,CAA0B,EAA1B,CACnB,OAAOT,cAAmBU,CAAAA,IAAnB,CAAwB,QAAS,CAACH,IAAD,CAAO,CAC7C,IAAII,UAAYJ,IAAKK,CAAAA,IAAL,EAEhB,OAAI,aAAcC,CAAAA,IAAd,CAAmBN,IAAnB,CAAJ;AACS,CAAA,CADT,CAI4B,GAA5B,GAAII,SAAUG,CAAAA,MAAV,CAAiB,CAAjB,CAAJ,EACkB,IAjBf,CAiBeV,QAASW,CAAAA,WAAT,EAjBf,CAiBuC,SAjBvC,CAiBuCJ,SAAUI,CAAAA,WAAV,EAjBvC,CAAoD,EAApD,GAAAC,IAAIC,CAAAA,OAAJ,CAAYC,SAAZ,CAAoBF,IAAIG,CAAAA,MAAxB,CAAiCD,SAAOC,CAAAA,MAAxC,CAgBH,EAII,OAAQN,CAAAA,IAAR,CAAaF,SAAb,CAAJ,CAESH,YAFT,GAE0BG,SAAUF,CAAAA,OAAV,CAAkB,OAAlB,CAA2B,EAA3B,CAF1B,CAKOH,QALP,GAKoBK,SAhByB,CAAxC,CALkB,CAyB3B,MAAO,CAAA,CA1B6C,CAZoD;",
"sources":["node_modules/rc-upload/lib/attr-accept.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_upload$lib$attr_accept\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction endsWith(str, suffix) {\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n\nvar _default = function _default(file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    var fileName = file.name || '';\n    var mimeType = file.type || '';\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\n    return acceptedFilesArray.some(function (type) {\n      var validType = type.trim(); // This is something like */*,*  allow all files\n\n      if (/^\\*(\\/\\*)?$/.test(type)) {\n        return true;\n      }\n\n      if (validType.charAt(0) === '.') {\n        return endsWith(fileName.toLowerCase(), validType.toLowerCase());\n      }\n\n      if (/\\/\\*$/.test(validType)) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n\n      return mimeType === validType;\n    });\n  }\n\n  return true;\n};\n\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_default","file","acceptedFiles","acceptedFilesArray","Array","isArray","split","fileName","name","mimeType","type","baseMimeType","replace","some","validType","trim","test","charAt","toLowerCase","str","indexOf","suffix","length"]
}
