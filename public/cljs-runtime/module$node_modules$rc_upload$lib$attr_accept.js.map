{
"version":3,
"file":"module$node_modules$rc_upload$lib$attr_accept.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,6CAAf,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1GC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,OAAR,CAAkB,IAAK,EA+BvBJ,QAAA,CAAQI,OAAR,CAzBeC,QAAiB,CAACC,IAAD,CAAOC,aAAP,CAAsB,CACpD,GAAID,IAAJ,EAAYC,aAAZ,CAA2B,CACrBC,aAAAA,CAAqBC,KAAA,CAAMC,OAAN,CAAcH,aAAd,CAAA,CAA+BA,aAA/B,CAA+CA,aAAA,CAAcI,KAAd,CAAoB,GAApB,CACxE,KAAIC,SAAWN,IAAXM,CAAgBC,IAAhBD,EAAwB,EAA5B,CACIE,SAAWR,IAAXQ,CAAgBC,IAAhBD,EAAwB,EAD5B,CAEIE,aAAeF,QAAA,CAASG,OAAT,CAAiB,OAAjB,CAA0B,EAA1B,CACnB,OAAOT,cAAA,CAAmBU,IAAnB,CAAwB,QAAS,CAACH,IAAD,CAAO,CAC7C,IAAII,UAAYJ,IAAA,CAAKK,IAAL,EAEhB,OAA4B,GAA5B;AAAID,SAAA,CAAUE,MAAV,CAAiB,CAAjB,CAAJ,EACkB,IAbf,CAaeT,QAAA,CAASU,WAAT,EAbf,CAauC,SAbvC,CAauCH,SAAA,CAAUG,WAAV,EAbvC,CAAoD,EAApD,GAAAC,IAAA,CAAIC,OAAJ,CAAYC,SAAZ,CAAoBF,IAApB,CAAwBG,MAAxB,CAAiCD,SAAjC,CAAwCC,MAAxC,CAYH,EAII,OAAA,CAAQC,IAAR,CAAaR,SAAb,CAAJ,CAESH,YAFT,GAE0BG,SAAA,CAAUF,OAAV,CAAkB,OAAlB,CAA2B,EAA3B,CAF1B,CAKOH,QALP,GAKoBK,SAZyB,CAAxC,CALkB,CAqB3B,MAAO,CAAA,CAtB6C,CAZoD;",
"sources":["node_modules/rc-upload/lib/attr-accept.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_upload$lib$attr_accept\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction endsWith(str, suffix) {\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n\nvar _default = function _default(file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    var fileName = file.name || '';\n    var mimeType = file.type || '';\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\n    return acceptedFilesArray.some(function (type) {\n      var validType = type.trim();\n\n      if (validType.charAt(0) === '.') {\n        return endsWith(fileName.toLowerCase(), validType.toLowerCase());\n      }\n\n      if (/\\/\\*$/.test(validType)) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n\n      return mimeType === validType;\n    });\n  }\n\n  return true;\n};\n\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_default","file","acceptedFiles","acceptedFilesArray","Array","isArray","split","fileName","name","mimeType","type","baseMimeType","replace","some","validType","trim","charAt","toLowerCase","str","indexOf","suffix","length","test"]
}
