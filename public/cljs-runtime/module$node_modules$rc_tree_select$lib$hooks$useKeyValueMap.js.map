{
"version":3,
"file":"module$node_modules$rc_tree_select$lib$hooks$useKeyValueMap.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHC,MAAAA,CAA0BH,OAAA,CAAQ,mEAAR,CAE9BI,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAQK,CAAAA,OAAR,CAQAC,QAAuB,CAACC,cAAD,CAAiB,CACtC,MAAOC,MAAMC,CAAAA,OAAN,CAAc,QAAS,EAAG,CAC/B,IAAIC,YAAc,IAAIC,GAAtB,CACIC,cAAgB,IAAID,GAExBJ,eAAeM,CAAAA,OAAf,CAAuB,QAAS,CAACC,QAAD,CAAW,CACzCJ,WAAYK,CAAAA,GAAZ,CAAgBD,QAASE,CAAAA,GAAzB,CAA8BF,QAA9B,CACAF,cAAcG,CAAAA,GAAd,CAAkBD,QAASG,CAAAA,IAAKb,CAAAA,KAAhC,CAAuCU,QAAvC,CAFyC,CAA3C,CAIA;MAAO,CAACJ,WAAD,CAAcE,aAAd,CARwB,CAA1B,CASJ,CAACL,cAAD,CATI,CAD+B,CANxC,KAAIC,MAAQP,MAAA,CAAwBH,OAAA,CAAQ,iCAAR,CAAxB,CAV4G;",
"sources":["node_modules/rc-tree-select/lib/hooks/useKeyValueMap.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_tree_select$lib$hooks$useKeyValueMap\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useKeyValueMap;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\n/**\n * Return cached Key Value map with DataNode.\n * Only re-calculate when `flattenOptions` changed.\n */\nfunction useKeyValueMap(flattenOptions) {\n  return React.useMemo(function () {\n    var cacheKeyMap = new Map();\n    var cacheValueMap = new Map(); // Cache options by key\n\n    flattenOptions.forEach(function (dataNode) {\n      cacheKeyMap.set(dataNode.key, dataNode);\n      cacheValueMap.set(dataNode.data.value, dataNode);\n    });\n    return [cacheKeyMap, cacheValueMap];\n  }, [flattenOptions]);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireWildcard","Object","defineProperty","value","default","useKeyValueMap","flattenOptions","React","useMemo","cacheKeyMap","Map","cacheValueMap","forEach","dataNode","set","key","data"]
}
