shadow$provide.module$node_modules$rc_tree_select$lib$OptionList=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),
React=global(require("module$node_modules$react$index")),_KeyCode=module(require("module$node_modules$rc_util$lib$KeyCode")),_useMemo=module(require("module$node_modules$rc_util$lib$hooks$useMemo")),_rcTree=module(require("module$node_modules$rc_tree$lib$index")),_Context=require("module$node_modules$rc_tree_select$lib$Context"),_useKeyValueMapping3=module(require("module$node_modules$rc_tree_select$lib$hooks$useKeyValueMapping")),_useKeyValueMap3=module(require("module$node_modules$rc_tree_select$lib$hooks$useKeyValueMap")),
HIDDEN_STYLE={width:0,height:0,display:"flex",overflow:"hidden",opacity:0,border:0,padding:0,margin:0};require=React.forwardRef(function(props,ref){var prefixCls=props.prefixCls,height=props.height,itemHeight=props.itemHeight,virtual=props.virtual,options=props.options,flattenOptions=props.flattenOptions,multiple=props.multiple,searchValue=props.searchValue,onSelect=props.onSelect,onToggleOpen=props.onToggleOpen,open=props.open,notFoundContent=props.notFoundContent;props=props.onMouseEnter;var _React$useContext=
React.useContext(_Context.SelectContext),checkable=_React$useContext.checkable,checkedKeys=_React$useContext.checkedKeys,halfCheckedKeys=_React$useContext.halfCheckedKeys,treeExpandedKeys=_React$useContext.treeExpandedKeys,treeDefaultExpandAll=_React$useContext.treeDefaultExpandAll,treeDefaultExpandedKeys=_React$useContext.treeDefaultExpandedKeys,onTreeExpand=_React$useContext.onTreeExpand,treeIcon=_React$useContext.treeIcon,showTreeIcon=_React$useContext.showTreeIcon,switcherIcon=_React$useContext.switcherIcon,
treeLine=_React$useContext.treeLine,treeNodeFilterProp=_React$useContext.treeNodeFilterProp,loadData=_React$useContext.loadData,treeLoadedKeys=_React$useContext.treeLoadedKeys,treeMotion=_React$useContext.treeMotion;_React$useContext=_React$useContext.onTreeLoad;var treeRef=React.useRef(),memoOptions=(0,_useMemo.default)(function(){return options},[open,options],function(prev,next){return next[0]&&prev[1]!==next[1]}),_useKeyValueMap=(0,_useKeyValueMap3.default)(flattenOptions),_useKeyValueMap2=(0,
_slicedToArray2.default)(_useKeyValueMap,2);_useKeyValueMap=_useKeyValueMap2[0];_useKeyValueMap2=_useKeyValueMap2[1];_useKeyValueMap=(0,_useKeyValueMapping3.default)(_useKeyValueMap,_useKeyValueMap2);_useKeyValueMap=(0,_slicedToArray2.default)(_useKeyValueMap,2);var getEntityByKey=_useKeyValueMap[0],getEntityByValue=_useKeyValueMap[1],valueKeys=React.useMemo(function(){return checkedKeys.map(function(val){return(val=getEntityByValue(val))?val.key:null})},[checkedKeys]);_useKeyValueMap=React.useMemo(function(){return checkable?
{checked:valueKeys,halfChecked:halfCheckedKeys}:null},[valueKeys,halfCheckedKeys,checkable]);React.useEffect(function(){if(open&&!multiple&&valueKeys.length){var _treeRef$current;null===(_treeRef$current=treeRef.current)||void 0===_treeRef$current?void 0:_treeRef$current.scrollTo({key:valueKeys[0]})}},[open]);var lowerSearchValue=String(searchValue).toLowerCase();treeDefaultExpandedKeys=React.useState(treeDefaultExpandedKeys);treeDefaultExpandedKeys=(0,_slicedToArray2.default)(treeDefaultExpandedKeys,
2);var expandedKeys=treeDefaultExpandedKeys[0],setExpandedKeys=treeDefaultExpandedKeys[1];treeDefaultExpandedKeys=React.useState(null);treeDefaultExpandedKeys=(0,_slicedToArray2.default)(treeDefaultExpandedKeys,2);var searchExpandedKeys=treeDefaultExpandedKeys[0],setSearchExpandedKeys=treeDefaultExpandedKeys[1];treeDefaultExpandedKeys=React.useMemo(function(){return treeExpandedKeys?(0,_toConsumableArray2.default)(treeExpandedKeys):searchValue?searchExpandedKeys:expandedKeys},[expandedKeys,searchExpandedKeys,
lowerSearchValue,treeExpandedKeys]);React.useEffect(function(){searchValue&&setSearchExpandedKeys(flattenOptions.map(function(o){return o.key}))},[searchValue]);_useKeyValueMap2=function(event){event.preventDefault()};var onInternalSelect=function(_,_ref){_=getEntityByKey(_ref.node.key,checkable?"checkbox":"select");null!==_&&onSelect(_.data.value,{selected:!checkedKeys.includes(_.data.value)});multiple||onToggleOpen(!1)},_React$useState5=React.useState(null);_React$useState5=(0,_slicedToArray2.default)(_React$useState5,
2);var activeKey=_React$useState5[0];_React$useState5=_React$useState5[1];var activeEntity=getEntityByKey(activeKey);React.useImperativeHandle(ref,function(){return{onKeyDown:function(event){var _treeRef$current2;switch(event.which){case _KeyCode.default.UP:case _KeyCode.default.DOWN:case _KeyCode.default.LEFT:case _KeyCode.default.RIGHT:null===(_treeRef$current2=treeRef.current)||void 0===_treeRef$current2?void 0:_treeRef$current2.onKeyDown(event);break;case _KeyCode.default.ENTER:null!==activeEntity&&
onInternalSelect(null,{node:{key:activeKey},selected:!checkedKeys.includes(activeEntity.data.value)});break;case _KeyCode.default.ESC:onToggleOpen(!1)}},onKeyUp:function(){}}});if(0===memoOptions.length)return React.createElement("div",{role:"listbox",className:"".concat(prefixCls,"-empty"),onMouseDown:_useKeyValueMap2},notFoundContent);ref={};treeLoadedKeys&&(ref.loadedKeys=treeLoadedKeys);treeDefaultExpandedKeys&&(ref.expandedKeys=treeDefaultExpandedKeys);return React.createElement("div",{onMouseDown:_useKeyValueMap2,
onMouseEnter:props},activeEntity&&open&&React.createElement("span",{style:HIDDEN_STYLE,"aria-live":"assertive"},activeEntity.data.value),React.createElement(_rcTree.default,Object.assign({ref:treeRef,focusable:!1,prefixCls:"".concat(prefixCls,"-tree"),treeData:memoOptions,height:height,itemHeight:itemHeight,virtual:virtual,multiple:multiple,icon:treeIcon,showIcon:showTreeIcon,switcherIcon:switcherIcon,showLine:treeLine,loadData:searchValue?null:loadData,motion:treeMotion,checkable:checkable,checkStrictly:!0,
checkedKeys:_useKeyValueMap,selectedKeys:checkable?[]:valueKeys,defaultExpandAll:treeDefaultExpandAll},ref,{onActiveChange:_React$useState5,onSelect:onInternalSelect,onCheck:onInternalSelect,onExpand:function(keys){setExpandedKeys(keys);setSearchExpandedKeys(keys);onTreeExpand&&onTreeExpand(keys)},onLoad:_React$useContext,filterTreeNode:function(treeNode){return lowerSearchValue?String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue):!1}})))});require.displayName="OptionList";
exports.default=require}
//# sourceMappingURL=module$node_modules$rc_tree_select$lib$OptionList.js.map
