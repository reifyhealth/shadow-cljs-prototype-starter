{
"version":3,
"file":"module$node_modules$rc_upload$lib$request.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/rc-upload/lib/request.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_upload$lib$request\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = upload;\n\nfunction getError(option, xhr) {\n  var msg = \"cannot \".concat(option.method, \" \").concat(option.action, \" \").concat(xhr.status, \"'\");\n  var err = new Error(msg);\n  err.status = xhr.status;\n  err.method = option.method;\n  err.url = option.action;\n  return err;\n}\n\nfunction getBody(xhr) {\n  var text = xhr.responseText || xhr.response;\n\n  if (!text) {\n    return text;\n  }\n\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return text;\n  }\n}\n\nfunction upload(option) {\n  // eslint-disable-next-line no-undef\n  var xhr = new XMLHttpRequest();\n\n  if (option.onProgress && xhr.upload) {\n    xhr.upload.onprogress = function progress(e) {\n      if (e.total > 0) {\n        e.percent = e.loaded / e.total * 100;\n      }\n\n      option.onProgress(e);\n    };\n  } // eslint-disable-next-line no-undef\n\n\n  var formData = new FormData();\n\n  if (option.data) {\n    Object.keys(option.data).forEach(function (key) {\n      var value = option.data[key]; // support key-value array data\n\n      if (Array.isArray(value)) {\n        value.forEach(function (item) {\n          // { list: [ 11, 22 ] }\n          // formData.append('list[]', 11);\n          formData.append(\"\".concat(key, \"[]\"), item);\n        });\n        return;\n      }\n\n      formData.append(key, option.data[key]);\n    });\n  } // eslint-disable-next-line no-undef\n\n\n  if (option.file instanceof Blob) {\n    formData.append(option.filename, option.file, option.file.name);\n  } else {\n    formData.append(option.filename, option.file);\n  }\n\n  xhr.onerror = function error(e) {\n    option.onError(e);\n  };\n\n  xhr.onload = function onload() {\n    // allow success when 2xx status\n    // see https://github.com/react-component/upload/issues/34\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(option, xhr), getBody(xhr));\n    }\n\n    return option.onSuccess(getBody(xhr), xhr);\n  };\n\n  xhr.open(option.method, option.action, true); // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n\n  if (option.withCredentials && 'withCredentials' in xhr) {\n    xhr.withCredentials = true;\n  }\n\n  var headers = option.headers || {}; // when set headers['X-Requested-With'] = null , can close default XHR header\n  // see https://github.com/react-component/upload/issues/33\n\n  if (headers['X-Requested-With'] !== null) {\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  }\n\n  Object.keys(headers).forEach(function (h) {\n    if (headers[h] !== null) {\n      xhr.setRequestHeader(h, headers[h]);\n    }\n  });\n  xhr.send(formData);\n  return {\n    abort: function abort() {\n      xhr.abort();\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getBody","xhr","text","responseText","response","JSON","parse","e","Object","defineProperty","value","default","upload","option","XMLHttpRequest","onProgress","onprogress","xhr.upload.onprogress","total","percent","loaded","formData","FormData","data","keys","forEach","key","Array","isArray","item","append","concat","file","Blob","filename","name","onerror","xhr.onerror","onError","onload","xhr.onload","status","msg","method","action","err","Error","url","onSuccess","open","withCredentials","headers","setRequestHeader","h","send","abort"]
}
