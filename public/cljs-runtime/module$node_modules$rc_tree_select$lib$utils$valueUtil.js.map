{
"version":3,
"file":"module$node_modules$rc_tree_select$lib$utils$valueUtil.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/rc-tree-select/lib/utils/valueUtil.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_tree_select$lib$utils$valueUtil\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toArray = toArray;\nexports.findValueOption = findValueOption;\nexports.isValueDisabled = isValueDisabled;\nexports.isCheckDisabled = isCheckDisabled;\nexports.flattenOptions = flattenOptions;\nexports.filterOptions = filterOptions;\nexports.getRawValueLabeled = getRawValueLabeled;\nexports.addValue = addValue;\nexports.removeValue = removeValue;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _legacyUtil = require(\"./legacyUtil\");\n\nfunction toArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return value !== undefined ? [value] : [];\n}\n\nfunction findValueOption(values, options) {\n  var optionMap = new Map();\n  options.forEach(function (flattenItem) {\n    var data = flattenItem.data;\n    optionMap.set(data.value, data);\n  });\n  return values.map(function (val) {\n    return (0, _legacyUtil.fillLegacyProps)(optionMap.get(val));\n  });\n}\n\nfunction isValueDisabled(value, options) {\n  var option = findValueOption([value], options)[0];\n\n  if (option) {\n    return option.disabled;\n  }\n\n  return false;\n}\n\nfunction isCheckDisabled(node) {\n  return node.disabled || node.disableCheckbox || node.checkable === false;\n}\n\nfunction getLevel(_ref) {\n  var parent = _ref.parent;\n  var level = 0;\n  var current = parent;\n\n  while (current) {\n    current = current.parent;\n    level += 1;\n  }\n\n  return level;\n}\n/**\n * Before reuse `rc-tree` logic, we need to add key since TreeSelect use `value` instead of `key`.\n */\n\n\nfunction flattenOptions(options) {\n  // Add missing key\n  function fillKey(list) {\n    return (list || []).map(function (node) {\n      var value = node.value,\n          key = node.key,\n          children = node.children;\n      var clone = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, node), {}, {\n        key: 'key' in node ? key : value\n      });\n\n      if (children) {\n        clone.children = fillKey(children);\n      }\n\n      return clone;\n    });\n  }\n\n  var flattenList = (0, _treeUtil.flattenTreeData)(fillKey(options), true);\n  return flattenList.map(function (node) {\n    return {\n      key: node.data.key,\n      data: node.data,\n      level: getLevel(node)\n    };\n  });\n}\n\nfunction getDefaultFilterOption(optionFilterProp) {\n  return function (searchValue, dataNode) {\n    var value = dataNode[optionFilterProp];\n    return String(value).toLowerCase().includes(String(searchValue).toLowerCase());\n  };\n}\n/** Filter options and return a new options by the search text */\n\n\nfunction filterOptions(searchValue, options, _ref2) {\n  var optionFilterProp = _ref2.optionFilterProp,\n      filterOption = _ref2.filterOption;\n\n  if (filterOption === false) {\n    return options;\n  }\n\n  var filterOptionFunc;\n\n  if (typeof filterOption === 'function') {\n    filterOptionFunc = filterOption;\n  } else {\n    filterOptionFunc = getDefaultFilterOption(optionFilterProp);\n  }\n\n  function dig(list) {\n    var keepAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return list.map(function (dataNode) {\n      var children = dataNode.children;\n      var match = keepAll || filterOptionFunc(searchValue, (0, _legacyUtil.fillLegacyProps)(dataNode));\n      var childList = dig(children || [], match);\n\n      if (match || childList.length) {\n        return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, dataNode), {}, {\n          children: childList\n        });\n      }\n\n      return null;\n    }).filter(function (node) {\n      return node;\n    });\n  }\n\n  return dig(options);\n}\n\nfunction getRawValueLabeled(values, prevValue, getEntityByValue, getLabelProp) {\n  var valueMap = new Map();\n  toArray(prevValue).forEach(function (item) {\n    if (item && (0, _typeof2.default)(item) === 'object' && 'value' in item) {\n      valueMap.set(item.value, item);\n    }\n  });\n  return values.map(function (val) {\n    var item = {\n      value: val\n    };\n    var entity = getEntityByValue(val, 'select', true);\n    var label = entity ? getLabelProp(entity.data) : val;\n\n    if (valueMap.has(val)) {\n      var labeledValue = valueMap.get(val);\n      item.label = 'label' in labeledValue ? labeledValue.label : label;\n\n      if ('halfChecked' in labeledValue) {\n        item.halfChecked = labeledValue.halfChecked;\n      }\n    } else {\n      item.label = label;\n    }\n\n    return item;\n  });\n}\n\nfunction addValue(rawValues, value) {\n  var values = new Set(rawValues);\n  values.add(value);\n  return Array.from(values);\n}\n\nfunction removeValue(rawValues, value) {\n  var values = new Set(rawValues);\n  values.delete(value);\n  return Array.from(values);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","toArray","value","Array","isArray","undefined","findValueOption","values","options","optionMap","Map","forEach","flattenItem","data","set","map","val","_legacyUtil","fillLegacyProps","get","getDefaultFilterOption","optionFilterProp","searchValue","dataNode","String","toLowerCase","includes","_interopRequireDefault","Object","defineProperty","isValueDisabled","option","disabled","isCheckDisabled","node","disableCheckbox","checkable","flattenOptions","fillKey","list","key","children","clone","_objectSpread2","default","flattenList","_treeUtil","flattenTreeData","level","current","parent","filterOptions","_ref2","dig","keepAll","arguments","length","match","filterOptionFunc","childList","filter","filterOption","getRawValueLabeled","prevValue","getEntityByValue","getLabelProp","valueMap","item","_typeof2","entity","label","has","labeledValue","halfChecked","addValue","rawValues","Set","add","from","removeValue","delete"]
}
