shadow$provide.module$node_modules$antd$lib$dropdown$dropdown_button=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),
React=global(require("module$node_modules$react$index")),_classnames=module(require("module$node_modules$classnames$index")),_EllipsisOutlined=module(require("module$node_modules$$ant_design$icons$EllipsisOutlined")),_button=module(require("module$node_modules$antd$lib$button$index")),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_dropdown=module(require("module$node_modules$antd$lib$dropdown$dropdown")),ButtonGroup=_button["default"].Group;require=function(props){var _React$useContext=
React.useContext(_configProvider.ConfigContext),getContextPopupContainer=_React$useContext.getPopupContainer,getPrefixCls=_React$useContext.getPrefixCls,direction=_React$useContext.direction,customizePrefixCls=props.prefixCls,type=props.type,disabled=props.disabled,onClick=props.onClick,htmlType=props.htmlType,children=props.children;_React$useContext=props.className;var overlay=props.overlay,trigger=props.trigger,align=props.align,visible=props.visible,onVisibleChange=props.onVisibleChange,placement=
props.placement,getPopupContainer=props.getPopupContainer,href=props.href,_props$icon=props.icon,icon=void 0===_props$icon?React.createElement(_EllipsisOutlined["default"],null):_props$icon,title=props.title,buttonsRender=props.buttonsRender,e="prefixCls type disabled onClick htmlType children className overlay trigger align visible onVisibleChange placement getPopupContainer href icon title buttonsRender".split(" ");_props$icon={};for(var p in props)Object.prototype.hasOwnProperty.call(props,p)&&
0>e.indexOf(p)&&(_props$icon[p]=props[p]);if(null!=props&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(props);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(props,p[i])&&(_props$icon[p[i]]=props[p[i]])}getPrefixCls=getPrefixCls("dropdown-button",customizePrefixCls);getContextPopupContainer={align:align,overlay:overlay,disabled:disabled,trigger:disabled?[]:trigger,onVisibleChange:onVisibleChange,getPopupContainer:getPopupContainer||
getContextPopupContainer};"visible"in props&&(getContextPopupContainer.visible=visible);getContextPopupContainer.placement="placement"in props?placement:"rtl"===direction?"bottomLeft":"bottomRight";props=React.createElement(_button["default"],{type:type,disabled:disabled,onClick:onClick,htmlType:htmlType,href:href,title:title},children);type=React.createElement(_button["default"],{type:type,icon:icon});props=buttonsRender([props,type]);type=(0,_slicedToArray2["default"])(props,2);props=type[0];type=
type[1];return React.createElement(ButtonGroup,(0,_extends2["default"])({},_props$icon,{className:(0,_classnames["default"])(getPrefixCls,_React$useContext)}),props,React.createElement(_dropdown["default"],getContextPopupContainer,type))};require.__ANT_BUTTON=!0;require.defaultProps={type:"default",buttonsRender:function(buttons){return buttons}};exports["default"]=require}
//# sourceMappingURL=module$node_modules$antd$lib$dropdown$dropdown_button.js.map
