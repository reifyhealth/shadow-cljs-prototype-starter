{
"version":3,
"file":"module$node_modules$$ctrl$tinycolor$dist$conversion.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@ctrl/tinycolor/dist/conversion.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ctrl$tinycolor$dist$conversion\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.numberInputToObject = exports.parseIntFromHex = exports.convertHexToDecimal = exports.convertDecimalToHex = exports.rgbaToArgbHex = exports.rgbaToHex = exports.rgbToHex = exports.hsvToRgb = exports.rgbToHsv = exports.hslToRgb = exports.rgbToHsl = exports.rgbToRgb = void 0;\nvar util_1 = require(\"./util\");\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n/**\n * Handle bounds / percentage checking to conform to CSS color spec\n * <http://www.w3.org/TR/css3-color/>\n * *Assumes:* r, g, b in [0, 255] or [0, 1]\n * *Returns:* { r, g, b } in [0, 255]\n */\nfunction rgbToRgb(r, g, b) {\n    return {\n        r: util_1.bound01(r, 255) * 255,\n        g: util_1.bound01(g, 255) * 255,\n        b: util_1.bound01(b, 255) * 255,\n    };\n}\nexports.rgbToRgb = rgbToRgb;\n/**\n * Converts an RGB color value to HSL.\n * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n * *Returns:* { h, s, l } in [0,1]\n */\nfunction rgbToHsl(r, g, b) {\n    r = util_1.bound01(r, 255);\n    g = util_1.bound01(g, 255);\n    b = util_1.bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (max + min) / 2;\n    if (max === min) {\n        s = 0;\n        h = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, l: l };\n}\nexports.rgbToHsl = rgbToHsl;\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * (6 * t);\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n/**\n * Converts an HSL color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nfunction hslToRgb(h, s, l) {\n    var r;\n    var g;\n    var b;\n    h = util_1.bound01(h, 360);\n    s = util_1.bound01(s, 100);\n    l = util_1.bound01(l, 100);\n    if (s === 0) {\n        // achromatic\n        g = l;\n        b = l;\n        r = l;\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\nexports.hslToRgb = hslToRgb;\n/**\n * Converts an RGB color value to HSV\n *\n * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n * *Returns:* { h, s, v } in [0,1]\n */\nfunction rgbToHsv(r, g, b) {\n    r = util_1.bound01(r, 255);\n    g = util_1.bound01(g, 255);\n    b = util_1.bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var v = max;\n    var d = max - min;\n    var s = max === 0 ? 0 : d / max;\n    if (max === min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\nexports.rgbToHsv = rgbToHsv;\n/**\n * Converts an HSV color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nfunction hsvToRgb(h, s, v) {\n    h = util_1.bound01(h, 360) * 6;\n    s = util_1.bound01(s, 100);\n    v = util_1.bound01(v, 100);\n    var i = Math.floor(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n    var mod = i % 6;\n    var r = [v, q, p, p, t, v][mod];\n    var g = [t, v, v, q, p, p][mod];\n    var b = [p, p, t, v, v, q][mod];\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\nexports.hsvToRgb = hsvToRgb;\n/**\n * Converts an RGB color to hex\n *\n * Assumes r, g, and b are contained in the set [0, 255]\n * Returns a 3 or 6 character hex\n */\nfunction rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n        util_1.pad2(Math.round(r).toString(16)),\n        util_1.pad2(Math.round(g).toString(16)),\n        util_1.pad2(Math.round(b).toString(16)),\n    ];\n    // Return a 3 character hex if possible\n    if (allow3Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join('');\n}\nexports.rgbToHex = rgbToHex;\n/**\n * Converts an RGBA color plus alpha transparency to hex\n *\n * Assumes r, g, b are contained in the set [0, 255] and\n * a in [0, 1]. Returns a 4 or 8 character rgba hex\n */\n// eslint-disable-next-line max-params\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n        util_1.pad2(Math.round(r).toString(16)),\n        util_1.pad2(Math.round(g).toString(16)),\n        util_1.pad2(Math.round(b).toString(16)),\n        util_1.pad2(convertDecimalToHex(a)),\n    ];\n    // Return a 4 character hex if possible\n    if (allow4Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1)) &&\n        hex[3].startsWith(hex[3].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join('');\n}\nexports.rgbaToHex = rgbaToHex;\n/**\n * Converts an RGBA color to an ARGB Hex8 string\n * Rarely used, but required for \"toFilter()\"\n */\nfunction rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n        util_1.pad2(convertDecimalToHex(a)),\n        util_1.pad2(Math.round(r).toString(16)),\n        util_1.pad2(Math.round(g).toString(16)),\n        util_1.pad2(Math.round(b).toString(16)),\n    ];\n    return hex.join('');\n}\nexports.rgbaToArgbHex = rgbaToArgbHex;\n/** Converts a decimal to a hex value */\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\nexports.convertDecimalToHex = convertDecimalToHex;\n/** Converts a hex value to a decimal */\nfunction convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n}\nexports.convertHexToDecimal = convertHexToDecimal;\n/** Parse a base-16 hex value into a base-10 integer */\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\nexports.parseIntFromHex = parseIntFromHex;\nfunction numberInputToObject(color) {\n    return {\n        r: color >> 16,\n        g: (color & 0xff00) >> 8,\n        b: color & 0xff,\n    };\n}\nexports.numberInputToObject = numberInputToObject;\n\n};"],
"names":["shadow$provide","global","require","module","exports","hue2rgb","p","q","t","convertDecimalToHex","d","Math","round","parseFloat","toString","parseIntFromHex","val","parseInt","Object","defineProperty","value","numberInputToObject","convertHexToDecimal","rgbaToArgbHex","rgbaToHex","rgbToHex","hsvToRgb","rgbToHsv","hslToRgb","rgbToHsl","rgbToRgb","util_1","r","g","b","bound01","max","min","h","l","s","v","i","floor","f","mod","allow3Char","hex","pad2","startsWith","charAt","join","a","allow4Char","color"]
}
