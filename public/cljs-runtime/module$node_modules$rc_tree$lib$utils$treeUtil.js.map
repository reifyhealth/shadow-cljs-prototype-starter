{
"version":3,
"file":"module$node_modules$rc_tree$lib$utils$treeUtil.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/rc-tree/lib/utils/treeUtil.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_tree$lib$utils$treeUtil\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getKey = getKey;\nexports.warningWithoutKey = warningWithoutKey;\nexports.convertTreeToData = convertTreeToData;\nexports.flattenTreeData = flattenTreeData;\nexports.traverseDataNodes = traverseDataNodes;\nexports.convertDataToEntities = convertDataToEntities;\nexports.getTreeNodeProps = getTreeNodeProps;\nexports.convertNodePropsToEventData = convertNodePropsToEventData;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _toArray = _interopRequireDefault(require(\"rc-util/lib/Children/toArray\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _util = require(\"../util\");\n\nfunction getKey(key, pos) {\n  if (key !== null && key !== undefined) {\n    return key;\n  }\n\n  return pos;\n}\n/**\n * Warning if TreeNode do not provides key\n */\n\n\nfunction warningWithoutKey() {\n  var treeData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var keys = new Map();\n\n  function dig(list) {\n    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    (list || []).forEach(function (treeNode) {\n      var key = treeNode.key,\n          children = treeNode.children;\n      (0, _warning.default)(key !== null && key !== undefined, \"Tree node must have a certain key: [\".concat(path).concat(key, \"]\"));\n      var recordKey = String(key);\n      (0, _warning.default)(!keys.has(recordKey) || key === null || key === undefined, \"Same 'key' exist in the Tree: \".concat(recordKey));\n      keys.set(recordKey, true);\n      dig(children, \"\".concat(path).concat(recordKey, \" > \"));\n    });\n  }\n\n  dig(treeData);\n}\n/**\n * Convert `children` of Tree into `treeData` structure.\n */\n\n\nfunction convertTreeToData(rootNodes) {\n  function dig(node) {\n    var treeNodes = (0, _toArray.default)(node);\n    return treeNodes.map(function (treeNode) {\n      // Filter invalidate node\n      if (!(0, _util.isTreeNode)(treeNode)) {\n        (0, _warning.default)(!treeNode, 'Tree/TreeNode can only accept TreeNode as children.');\n        return null;\n      }\n\n      var key = treeNode.key;\n      var _treeNode$props = treeNode.props,\n          children = _treeNode$props.children,\n          rest = (0, _objectWithoutProperties2.default)(_treeNode$props, [\"children\"]);\n      var dataNode = (0, _objectSpread2.default)({\n        key: key\n      }, rest);\n      var parsedChildren = dig(children);\n\n      if (parsedChildren.length) {\n        dataNode.children = parsedChildren;\n      }\n\n      return dataNode;\n    }).filter(function (dataNode) {\n      return dataNode;\n    });\n  }\n\n  return dig(rootNodes);\n}\n/**\n * Flat nest tree data into flatten list. This is used for virtual list render.\n * @param treeNodeList Origin data node list\n * @param expandedKeys\n * need expanded keys, provides `true` means all expanded (used in `rc-tree-select`).\n */\n\n\nfunction flattenTreeData() {\n  var treeNodeList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var expandedKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var expandedKeySet = new Set(expandedKeys === true ? [] : expandedKeys);\n  var flattenList = [];\n\n  function dig(list) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return list.map(function (treeNode, index) {\n      var pos = (0, _util.getPosition)(parent ? parent.pos : '0', index);\n      var mergedKey = getKey(treeNode.key, pos); // Add FlattenDataNode into list\n\n      var flattenNode = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, treeNode), {}, {\n        parent: parent,\n        pos: pos,\n        children: null,\n        data: treeNode,\n        isStart: [].concat((0, _toConsumableArray2.default)(parent ? parent.isStart : []), [index === 0]),\n        isEnd: [].concat((0, _toConsumableArray2.default)(parent ? parent.isEnd : []), [index === list.length - 1])\n      });\n      flattenList.push(flattenNode); // Loop treeNode children\n\n      if (expandedKeys === true || expandedKeySet.has(mergedKey)) {\n        flattenNode.children = dig(treeNode.children || [], flattenNode);\n      } else {\n        flattenNode.children = [];\n      }\n\n      return flattenNode;\n    });\n  }\n\n  dig(treeNodeList);\n  return flattenList;\n}\n/**\n * Traverse all the data by `treeData`.\n * Please not use it out of the `rc-tree` since we may refactor this code.\n */\n\n\nfunction traverseDataNodes(dataNodes, callback, // To avoid too many params, let use config instead of origin param\nconfig) {\n  // Init config\n  var externalGetKey = null;\n  var childrenPropName;\n  var configType = (0, _typeof2.default)(config);\n\n  if (configType === 'function' || configType === 'string') {\n    // Legacy getKey param\n    externalGetKey = config;\n  } else if (config && configType === 'object') {\n    childrenPropName = config.childrenPropName;\n    externalGetKey = config.externalGetKey;\n  }\n\n  childrenPropName = childrenPropName || 'children'; // Get keys\n\n  var syntheticGetKey;\n\n  if (externalGetKey) {\n    if (typeof externalGetKey === 'string') {\n      syntheticGetKey = function syntheticGetKey(node) {\n        return node[externalGetKey];\n      };\n    } else if (typeof externalGetKey === 'function') {\n      syntheticGetKey = function syntheticGetKey(node) {\n        return externalGetKey(node);\n      };\n    }\n  } else {\n    syntheticGetKey = function syntheticGetKey(node, pos) {\n      return getKey(node.key, pos);\n    };\n  } // Process\n\n\n  function processNode(node, index, parent) {\n    var children = node ? node[childrenPropName] : dataNodes;\n    var pos = node ? (0, _util.getPosition)(parent.pos, index) : '0'; // Process node if is not root\n\n    if (node) {\n      var key = syntheticGetKey(node, pos);\n      var data = {\n        node: node,\n        index: index,\n        pos: pos,\n        key: key,\n        parentPos: parent.node ? parent.pos : null,\n        level: parent.level + 1\n      };\n      callback(data);\n    } // Process children node\n\n\n    if (children) {\n      children.forEach(function (subNode, subIndex) {\n        processNode(subNode, subIndex, {\n          node: node,\n          pos: pos,\n          level: parent ? parent.level + 1 : -1\n        });\n      });\n    }\n  }\n\n  processNode(null);\n}\n/**\n * Convert `treeData` into entity records.\n */\n\n\nfunction convertDataToEntities(dataNodes) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      initWrapper = _ref.initWrapper,\n      processEntity = _ref.processEntity,\n      onProcessFinished = _ref.onProcessFinished,\n      externalGetKey = _ref.externalGetKey,\n      childrenPropName = _ref.childrenPropName;\n\n  var\n  /** @deprecated Use `config.externalGetKey` instead */\n  legacyExternalGetKey = arguments.length > 2 ? arguments[2] : undefined;\n  // Init config\n  var mergedExternalGetKey = externalGetKey || legacyExternalGetKey;\n  var posEntities = {};\n  var keyEntities = {};\n  var wrapper = {\n    posEntities: posEntities,\n    keyEntities: keyEntities\n  };\n\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n\n  traverseDataNodes(dataNodes, function (item) {\n    var node = item.node,\n        index = item.index,\n        pos = item.pos,\n        key = item.key,\n        parentPos = item.parentPos,\n        level = item.level;\n    var entity = {\n      node: node,\n      index: index,\n      key: key,\n      pos: pos,\n      level: level\n    };\n    var mergedKey = getKey(key, pos);\n    posEntities[pos] = entity;\n    keyEntities[mergedKey] = entity; // Fill children\n\n    entity.parent = posEntities[parentPos];\n\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  }, {\n    externalGetKey: mergedExternalGetKey,\n    childrenPropName: childrenPropName\n  });\n\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n\n  return wrapper;\n}\n/**\n * Get TreeNode props with Tree props.\n */\n\n\nfunction getTreeNodeProps(key, _ref2) {\n  var expandedKeys = _ref2.expandedKeys,\n      selectedKeys = _ref2.selectedKeys,\n      loadedKeys = _ref2.loadedKeys,\n      loadingKeys = _ref2.loadingKeys,\n      checkedKeys = _ref2.checkedKeys,\n      halfCheckedKeys = _ref2.halfCheckedKeys,\n      dragOverNodeKey = _ref2.dragOverNodeKey,\n      dropPosition = _ref2.dropPosition,\n      keyEntities = _ref2.keyEntities;\n  var entity = keyEntities[key];\n  var treeNodeProps = {\n    eventKey: key,\n    expanded: expandedKeys.indexOf(key) !== -1,\n    selected: selectedKeys.indexOf(key) !== -1,\n    loaded: loadedKeys.indexOf(key) !== -1,\n    loading: loadingKeys.indexOf(key) !== -1,\n    checked: checkedKeys.indexOf(key) !== -1,\n    halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n    pos: String(entity ? entity.pos : ''),\n    // [Legacy] Drag props\n    // Since the interaction of drag is changed, the semantic of the props are\n    // not accuracy, I think it should be finally removed\n    dragOver: dragOverNodeKey === key && dropPosition === 0,\n    dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n    dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n  };\n  return treeNodeProps;\n}\n\nfunction convertNodePropsToEventData(props) {\n  var data = props.data,\n      expanded = props.expanded,\n      selected = props.selected,\n      checked = props.checked,\n      loaded = props.loaded,\n      loading = props.loading,\n      halfChecked = props.halfChecked,\n      dragOver = props.dragOver,\n      dragOverGapTop = props.dragOverGapTop,\n      dragOverGapBottom = props.dragOverGapBottom,\n      pos = props.pos,\n      active = props.active;\n  var eventData = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, data), {}, {\n    expanded: expanded,\n    selected: selected,\n    checked: checked,\n    loaded: loaded,\n    loading: loading,\n    halfChecked: halfChecked,\n    dragOver: dragOver,\n    dragOverGapTop: dragOverGapTop,\n    dragOverGapBottom: dragOverGapBottom,\n    pos: pos,\n    active: active\n  });\n\n  if (!('props' in eventData)) {\n    Object.defineProperty(eventData, 'props', {\n      get: function get() {\n        (0, _warning.default)(false, 'Second param return from event is node data instead of TreeNode instance. Please read value directly instead of reading from `props`.');\n        return props;\n      }\n    });\n  }\n\n  return eventData;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getKey","key","pos","undefined","traverseDataNodes","dataNodes","callback","config","processNode","node","index","parent","children","childrenPropName","_util","getPosition","syntheticGetKey","data","parentPos","level","forEach","subNode","subIndex","externalGetKey","configType","_typeof2","default","_interopRequireDefault","Object","defineProperty","value","warningWithoutKey","dig","list","path","arguments","length","treeNode","_warning","concat","recordKey","String","keys","has","set","treeData","Map","convertTreeToData","rootNodes","treeNodes","_toArray","map","isTreeNode","_treeNode$props","props","rest","_objectWithoutProperties2","dataNode","_objectSpread2","parsedChildren","filter","flattenTreeData","mergedKey","flattenNode","isStart","_toConsumableArray2","isEnd","flattenList","push","expandedKeys","expandedKeySet","treeNodeList","Set","convertDataToEntities","_ref","initWrapper","processEntity","onProcessFinished","legacyExternalGetKey","mergedExternalGetKey","posEntities","keyEntities","wrapper","item","entity","getTreeNodeProps","_ref2","selectedKeys","loadedKeys","loadingKeys","checkedKeys","halfCheckedKeys","dragOverNodeKey","dropPosition","treeNodeProps","eventKey","expanded","indexOf","selected","loaded","loading","checked","halfChecked","dragOver","dragOverGapTop","dragOverGapBottom","convertNodePropsToEventData","active","eventData","get"]
}
