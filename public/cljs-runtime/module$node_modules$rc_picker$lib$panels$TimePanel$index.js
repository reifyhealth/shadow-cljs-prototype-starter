shadow$provide.module$node_modules$rc_picker$lib$panels$TimePanel$index=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),
_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),React=global(require("module$node_modules$react$index")),_classnames=module(require("module$node_modules$classnames$index")),_TimeHeader=module(require("module$node_modules$rc_picker$lib$panels$TimePanel$TimeHeader")),_TimeBody=module(require("module$node_modules$rc_picker$lib$panels$TimePanel$TimeBody")),_uiUtil=require("module$node_modules$rc_picker$lib$utils$uiUtil"),countBoolean=function(boolList){return boolList.filter(function(bool){return!1!==
bool}).length};exports.default=function(props){var generateConfig=props.generateConfig,_props$format=props.format;_props$format=void 0===_props$format?"HH:mm:ss":_props$format;var prefixCls=props.prefixCls,active=props.active,operationRef=props.operationRef,showHour=props.showHour,showMinute=props.showMinute,showSecond=props.showSecond,_props$use12Hours=props.use12Hours;_props$use12Hours=void 0===_props$use12Hours?!1:_props$use12Hours;var onSelect=props.onSelect,value=props.value,panelPrefixCls="".concat(prefixCls,
"-time-panel"),bodyOperationRef=React.useRef(),_React$useState=React.useState(-1);_React$useState=(0,_slicedToArray2.default)(_React$useState,2);var activeColumnIndex=_React$useState[0],setActiveColumnIndex=_React$useState[1],columnsCount=countBoolean([showHour,showMinute,showSecond,_props$use12Hours]);operationRef.current={onKeyDown:function(event){return(0,_uiUtil.createKeyDownHandler)(event,{onLeftRight:function(diff){setActiveColumnIndex((activeColumnIndex+diff+columnsCount)%columnsCount)},onUpDown:function(diff){if(-1===
activeColumnIndex)setActiveColumnIndex(0);else if(bodyOperationRef.current)bodyOperationRef.current.onUpDown(diff)},onEnter:function(){onSelect(value||generateConfig.getNow(),"key");setActiveColumnIndex(-1)}})},onBlur:function(){setActiveColumnIndex(-1)}};return React.createElement("div",{className:(0,_classnames.default)(panelPrefixCls,(0,_defineProperty2.default)({},"".concat(panelPrefixCls,"-active"),active))},React.createElement(_TimeHeader.default,(0,_extends2.default)({},props,{format:_props$format,
prefixCls:prefixCls})),React.createElement(_TimeBody.default,(0,_extends2.default)({},props,{prefixCls:prefixCls,activeColumnIndex:activeColumnIndex,operationRef:bodyOperationRef})))}}
//# sourceMappingURL=module$node_modules$rc_picker$lib$panels$TimePanel$index.js.map
