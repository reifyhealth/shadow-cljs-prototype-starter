shadow$provide.module$node_modules$rc_resize_observer$lib$index=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_classCallCheck2=module(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),
_createClass2=module(require("module$node_modules$$babel$runtime$helpers$createClass")),_inherits2=module(require("module$node_modules$$babel$runtime$helpers$inherits")),_createSuper2=module(require("module$node_modules$$babel$runtime$helpers$createSuper")),React=global(require("module$node_modules$react$index")),_findDOMNode=module(require("module$node_modules$rc_util$lib$Dom$findDOMNode")),_toArray=module(require("module$node_modules$rc_util$lib$Children$toArray")),_warning=module(require("module$node_modules$rc_util$lib$warning")),
_ref=require("module$node_modules$rc_util$lib$ref"),_resizeObserverPolyfill=module(require("module$node_modules$resize_observer_polyfill$dist$ResizeObserver"));require=function(_React$Component){function ReactResizeObserver(){(0,_classCallCheck2.default)(this,ReactResizeObserver);var _this=_super.apply(this,arguments);_this.resizeObserver=null;_this.childNode=null;_this.currentElement=null;_this.state={width:0,height:0,offsetHeight:0,offsetWidth:0};_this.onResize=function(entries){var onResize=_this.props.onResize,
target=entries[0].target,_target$getBoundingCl=target.getBoundingClientRect(),offsetWidth=target.offsetWidth,offsetHeight=target.offsetHeight;entries=Math.floor(_target$getBoundingCl.width);_target$getBoundingCl=Math.floor(_target$getBoundingCl.height);if(_this.state.width!==entries||_this.state.height!==_target$getBoundingCl||_this.state.offsetWidth!==offsetWidth||_this.state.offsetHeight!==offsetHeight){var size={width:entries,height:_target$getBoundingCl,offsetWidth:offsetWidth,offsetHeight:offsetHeight};
_this.setState(size);onResize&&Promise.resolve().then(function(){onResize((0,_objectSpread2.default)((0,_objectSpread2.default)({},size),{},{offsetWidth:offsetWidth,offsetHeight:offsetHeight}),target)})}};_this.setChildNode=function(node){_this.childNode=node};return _this}(0,_inherits2.default)(ReactResizeObserver,_React$Component);var _super=(0,_createSuper2.default)(ReactResizeObserver);(0,_createClass2.default)(ReactResizeObserver,[{key:"componentDidMount",value:function(){this.onComponentUpdated()}},
{key:"componentDidUpdate",value:function(){this.onComponentUpdated()}},{key:"componentWillUnmount",value:function(){this.destroyObserver()}},{key:"onComponentUpdated",value:function(){if(this.props.disabled)this.destroyObserver();else{var element=(0,_findDOMNode.default)(this.childNode||this);element!==this.currentElement&&(this.destroyObserver(),this.currentElement=element);!this.resizeObserver&&element&&(this.resizeObserver=new _resizeObserverPolyfill.default(this.onResize),this.resizeObserver.observe(element))}}},
{key:"destroyObserver",value:function(){this.resizeObserver&&(this.resizeObserver.disconnect(),this.resizeObserver=null)}},{key:"render",value:function(){var children=this.props.children;children=(0,_toArray.default)(children);if(1<children.length)(0,_warning.default)(!1,"Find more than one child node with `children` in ResizeObserver. Will only observe first one.");else if(0===children.length)return(0,_warning.default)(!1,"`children` of ResizeObserver is empty. Nothing is in observe."),null;var childNode=
children[0];if(React.isValidElement(childNode)&&(0,_ref.supportRef)(childNode)){var ref=childNode.ref;children[0]=React.cloneElement(childNode,{ref:(0,_ref.composeRef)(ref,this.setChildNode)})}return 1===children.length?children[0]:children.map(function(node,index){return!React.isValidElement(node)||"key"in node&&null!==node.key?node:React.cloneElement(node,{key:"".concat("rc-observer-key","-").concat(index)})})}}]);return ReactResizeObserver}(React.Component);require.displayName="ResizeObserver";
exports.default=require}
//# sourceMappingURL=module$node_modules$rc_resize_observer$lib$index.js.map
