shadow$provide.module$node_modules$rc_dialog$lib$Dialog$index=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(props){function onInternalClose(e){null===onClose||void 0===onClose?void 0:onClose(e)}var _props$prefixCls=props.prefixCls;_props$prefixCls=void 0===_props$prefixCls?
"rc-dialog":_props$prefixCls;var zIndex=props.zIndex,_props$visible=props.visible,visible=void 0===_props$visible?!1:_props$visible;_props$visible=props.keyboard;var keyboard=void 0===_props$visible?!0:_props$visible;_props$visible=props.focusTriggerAfterClose;var focusTriggerAfterClose=void 0===_props$visible?!0:_props$visible,scrollLocker=props.scrollLocker;_props$visible=props.title;var wrapStyle=props.wrapStyle,wrapClassName=props.wrapClassName,wrapProps=props.wrapProps,onClose=props.onClose,
afterClose=props.afterClose,transitionName=props.transitionName,animation=props.animation,_props$closable=props.closable;_props$closable=void 0===_props$closable?!0:_props$closable;var _props$mask=props.mask,mask=void 0===_props$mask?!0:_props$mask;_props$mask=props.maskTransitionName;var maskAnimation=props.maskAnimation,_props$maskClosable=props.maskClosable;_props$maskClosable=void 0===_props$maskClosable?!0:_props$maskClosable;var maskStyle=props.maskStyle,maskProps=props.maskProps,lastOutSideActiveElementRef=
(0,React.useRef)(),wrapperRef=(0,React.useRef)(),contentRef=(0,React.useRef)(),_React$useState=React.useState(visible);_React$useState=(0,_slicedToArray2.default)(_React$useState,2);var animatedVisible=_React$useState[0],setAnimatedVisible=_React$useState[1];_React$useState=(0,React.useRef)();_React$useState.current||(_React$useState.current="rcDialogTitle".concat((0,_util.getUUID)()));var contentClickRef=(0,React.useRef)(!1),contentTimeoutRef=(0,React.useRef)(),onWrapperClick=null;_props$maskClosable&&
(onWrapperClick=function(e){contentClickRef.current?contentClickRef.current=!1:wrapperRef.current===e.target&&onInternalClose(e)});(0,React.useEffect)(function(){visible&&setAnimatedVisible(!0);return function(){}},[visible]);(0,React.useEffect)(function(){return function(){clearTimeout(contentTimeoutRef.current)}},[]);(0,React.useEffect)(function(){return animatedVisible?(null===scrollLocker||void 0===scrollLocker?void 0:scrollLocker.lock(),null===scrollLocker||void 0===scrollLocker?void 0:scrollLocker.unLock):
function(){}},[animatedVisible,scrollLocker]);return React.createElement("div",{className:"".concat(_props$prefixCls,"-root")},React.createElement(_Mask.default,{prefixCls:_props$prefixCls,visible:mask&&visible,motionName:(0,_util.getMotionName)(_props$prefixCls,_props$mask,maskAnimation),style:(0,_objectSpread2.default)({zIndex:zIndex},maskStyle),maskProps:maskProps}),React.createElement("div",(0,_extends2.default)({tabIndex:-1,onKeyDown:function(e){keyboard&&e.keyCode===_KeyCode.default.ESC?(e.stopPropagation(),
onInternalClose(e)):visible&&e.keyCode===_KeyCode.default.TAB&&contentRef.current.changeActive(!e.shiftKey)},className:(0,_classnames.default)("".concat(_props$prefixCls,"-wrap"),wrapClassName),ref:wrapperRef,onClick:onWrapperClick,role:"dialog","aria-labelledby":_props$visible?_React$useState.current:null,style:(0,_objectSpread2.default)((0,_objectSpread2.default)({zIndex:zIndex},wrapStyle),{},{display:animatedVisible?null:"none"})},wrapProps),React.createElement(_Content.default,(0,_extends2.default)({},
props,{onMouseDown:function(){clearTimeout(contentTimeoutRef.current);contentClickRef.current=!0},onMouseUp:function(){contentTimeoutRef.current=setTimeout(function(){contentClickRef.current=!1})},ref:contentRef,closable:_props$closable,ariaId:_React$useState.current,prefixCls:_props$prefixCls,visible:visible,onClose:onInternalClose,onVisibleChanged:function(newVisible){if(newVisible){if(!(0,_contains.default)(wrapperRef.current,document.activeElement)){var _contentRef$current;lastOutSideActiveElementRef.current=
document.activeElement;null===(_contentRef$current=contentRef.current)||void 0===_contentRef$current?void 0:_contentRef$current.focus()}}else{setAnimatedVisible(!1);if(mask&&lastOutSideActiveElementRef.current&&focusTriggerAfterClose){try{lastOutSideActiveElementRef.current.focus({preventScroll:!0})}catch(e){}lastOutSideActiveElementRef.current=null}animatedVisible&&(null===afterClose||void 0===afterClose?void 0:afterClose())}},motionName:(0,_util.getMotionName)(_props$prefixCls,transitionName,animation)}))))};
var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),React=global(require("module$node_modules$react$index")),_classnames=module(require("module$node_modules$classnames$index")),_KeyCode=module(require("module$node_modules$rc_util$lib$KeyCode")),_contains=module(require("module$node_modules$rc_util$lib$Dom$contains")),
_Mask=module(require("module$node_modules$rc_dialog$lib$Dialog$Mask")),_util=require("module$node_modules$rc_dialog$lib$util"),_Content=module(require("module$node_modules$rc_dialog$lib$Dialog$Content$index"))}
//# sourceMappingURL=module$node_modules$rc_dialog$lib$Dialog$index.js.map
