{
"version":3,
"file":"module$node_modules$rc_tree$lib$utils$conductUtil.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/rc-tree/lib/utils/conductUtil.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_tree$lib$utils$conductUtil\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isCheckDisabled = isCheckDisabled;\nexports.conductCheck = conductCheck;\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nfunction removeFromCheckedKeys(halfCheckedKeys, checkedKeys) {\n  var filteredKeys = new Set();\n  halfCheckedKeys.forEach(function (key) {\n    if (!checkedKeys.has(key)) {\n      filteredKeys.add(key);\n    }\n  });\n  return filteredKeys;\n}\n\nfunction isCheckDisabled(node) {\n  var _ref = node || {},\n      disabled = _ref.disabled,\n      disableCheckbox = _ref.disableCheckbox,\n      checkable = _ref.checkable;\n\n  return !!(disabled || disableCheckbox) || checkable === false;\n} // Fill miss keys\n\n\nfunction fillConductCheck(keys, levelEntities, maxLevel, syntheticGetCheckDisabled) {\n  var checkedKeys = new Set(keys);\n  var halfCheckedKeys = new Set(); // Add checked keys top to bottom\n\n  for (var level = 0; level <= maxLevel; level += 1) {\n    var entities = levelEntities.get(level) || new Set();\n    entities.forEach(function (entity) {\n      var key = entity.key,\n          node = entity.node,\n          _entity$children = entity.children,\n          children = _entity$children === void 0 ? [] : _entity$children;\n\n      if (checkedKeys.has(key) && !syntheticGetCheckDisabled(node)) {\n        children.filter(function (childEntity) {\n          return !syntheticGetCheckDisabled(childEntity.node);\n        }).forEach(function (childEntity) {\n          checkedKeys.add(childEntity.key);\n        });\n      }\n    });\n  } // Add checked keys from bottom to top\n\n\n  var visitedKeys = new Set();\n\n  for (var _level = maxLevel; _level >= 0; _level -= 1) {\n    var _entities = levelEntities.get(_level) || new Set();\n\n    _entities.forEach(function (entity) {\n      var parent = entity.parent,\n          node = entity.node; // Skip if no need to check\n\n      if (syntheticGetCheckDisabled(node) || !entity.parent || visitedKeys.has(entity.parent.key)) {\n        return;\n      } // Skip if parent is disabled\n\n\n      if (syntheticGetCheckDisabled(entity.parent.node)) {\n        visitedKeys.add(parent.key);\n        return;\n      }\n\n      var allChecked = true;\n      var partialChecked = false;\n      (parent.children || []).filter(function (childEntity) {\n        return !syntheticGetCheckDisabled(childEntity.node);\n      }).forEach(function (_ref2) {\n        var key = _ref2.key;\n        var checked = checkedKeys.has(key);\n\n        if (allChecked && !checked) {\n          allChecked = false;\n        }\n\n        if (!partialChecked && (checked || halfCheckedKeys.has(key))) {\n          partialChecked = true;\n        }\n      });\n\n      if (allChecked) {\n        checkedKeys.add(parent.key);\n      }\n\n      if (partialChecked) {\n        halfCheckedKeys.add(parent.key);\n      }\n\n      visitedKeys.add(parent.key);\n    });\n  }\n\n  return {\n    checkedKeys: Array.from(checkedKeys),\n    halfCheckedKeys: Array.from(removeFromCheckedKeys(halfCheckedKeys, checkedKeys))\n  };\n} // Remove useless key\n\n\nfunction cleanConductCheck(keys, halfKeys, levelEntities, maxLevel, syntheticGetCheckDisabled) {\n  var checkedKeys = new Set(keys);\n  var halfCheckedKeys = new Set(halfKeys); // Remove checked keys from top to bottom\n\n  for (var level = 0; level <= maxLevel; level += 1) {\n    var entities = levelEntities.get(level) || new Set();\n    entities.forEach(function (entity) {\n      var key = entity.key,\n          node = entity.node,\n          _entity$children2 = entity.children,\n          children = _entity$children2 === void 0 ? [] : _entity$children2;\n\n      if (!checkedKeys.has(key) && !halfCheckedKeys.has(key) && !syntheticGetCheckDisabled(node)) {\n        children.filter(function (childEntity) {\n          return !syntheticGetCheckDisabled(childEntity.node);\n        }).forEach(function (childEntity) {\n          checkedKeys.delete(childEntity.key);\n        });\n      }\n    });\n  } // Remove checked keys form bottom to top\n\n\n  halfCheckedKeys = new Set();\n  var visitedKeys = new Set();\n\n  for (var _level2 = maxLevel; _level2 >= 0; _level2 -= 1) {\n    var _entities2 = levelEntities.get(_level2) || new Set();\n\n    _entities2.forEach(function (entity) {\n      var parent = entity.parent,\n          node = entity.node; // Skip if no need to check\n\n      if (syntheticGetCheckDisabled(node) || !entity.parent || visitedKeys.has(entity.parent.key)) {\n        return;\n      } // Skip if parent is disabled\n\n\n      if (syntheticGetCheckDisabled(entity.parent.node)) {\n        visitedKeys.add(parent.key);\n        return;\n      }\n\n      var allChecked = true;\n      var partialChecked = false;\n      (parent.children || []).filter(function (childEntity) {\n        return !syntheticGetCheckDisabled(childEntity.node);\n      }).forEach(function (_ref3) {\n        var key = _ref3.key;\n        var checked = checkedKeys.has(key);\n\n        if (allChecked && !checked) {\n          allChecked = false;\n        }\n\n        if (!partialChecked && (checked || halfCheckedKeys.has(key))) {\n          partialChecked = true;\n        }\n      });\n\n      if (!allChecked) {\n        checkedKeys.delete(parent.key);\n      }\n\n      if (partialChecked) {\n        halfCheckedKeys.add(parent.key);\n      }\n\n      visitedKeys.add(parent.key);\n    });\n  }\n\n  return {\n    checkedKeys: Array.from(checkedKeys),\n    halfCheckedKeys: Array.from(removeFromCheckedKeys(halfCheckedKeys, checkedKeys))\n  };\n}\n/**\n * Conduct with keys.\n * @param keyList current key list\n * @param keyEntities key - dataEntity map\n * @param mode `fill` to fill missing key, `clean` to remove useless key\n */\n\n\nfunction conductCheck(keyList, checked, keyEntities, getCheckDisabled) {\n  var warningMissKeys = [];\n  var syntheticGetCheckDisabled;\n\n  if (getCheckDisabled) {\n    syntheticGetCheckDisabled = getCheckDisabled;\n  } else {\n    syntheticGetCheckDisabled = isCheckDisabled;\n  } // We only handle exist keys\n\n\n  var keys = new Set(keyList.filter(function (key) {\n    var hasEntity = !!keyEntities[key];\n\n    if (!hasEntity) {\n      warningMissKeys.push(key);\n    }\n\n    return hasEntity;\n  }));\n  var levelEntities = new Map();\n  var maxLevel = 0; // Convert entities by level for calculation\n\n  Object.keys(keyEntities).forEach(function (key) {\n    var entity = keyEntities[key];\n    var level = entity.level;\n    var levelSet = levelEntities.get(level);\n\n    if (!levelSet) {\n      levelSet = new Set();\n      levelEntities.set(level, levelSet);\n    }\n\n    levelSet.add(entity);\n    maxLevel = Math.max(maxLevel, level);\n  });\n  (0, _warning.default)(!warningMissKeys.length, \"Tree missing follow keys: \".concat(warningMissKeys.slice(0, 100).map(function (key) {\n    return \"'\".concat(key, \"'\");\n  }).join(', ')));\n  var result;\n\n  if (checked === true) {\n    result = fillConductCheck(keys, levelEntities, maxLevel, syntheticGetCheckDisabled);\n  } else {\n    result = cleanConductCheck(keys, checked.halfCheckedKeys, levelEntities, maxLevel, syntheticGetCheckDisabled);\n  }\n\n  return result;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","removeFromCheckedKeys","halfCheckedKeys","checkedKeys","filteredKeys","Set","forEach","key","has","add","isCheckDisabled","node","_ref","disableCheckbox","checkable","disabled","fillConductCheck","keys","levelEntities","maxLevel","syntheticGetCheckDisabled","level","get","entity","_entity$children","children","filter","childEntity","visitedKeys","_level","parent","allChecked","partialChecked","_ref2","checked","Array","from","cleanConductCheck","halfKeys","_entity$children2","delete","_level2","_ref3","_interopRequireDefault","Object","defineProperty","value","conductCheck","keyList","keyEntities","getCheckDisabled","warningMissKeys","hasEntity","push","Map","levelSet","set","Math","max","_warning","default","length","concat","slice","map","join","result"]
}
