shadow$provide.module$node_modules$rc_progress$lib$Line=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),
_objectWithoutProperties2=module(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),React=global(require("module$node_modules$react$index")),_classnames=module(require("module$node_modules$classnames$index")),_common=require("module$node_modules$rc_progress$lib$common");require=function(_ref){var className=_ref.className,percent=_ref.percent,prefixCls=_ref.prefixCls,strokeColor=_ref.strokeColor,strokeLinecap=_ref.strokeLinecap,strokeWidth=_ref.strokeWidth,style=_ref.style,
trailColor=_ref.trailColor,trailWidth=_ref.trailWidth,transition=_ref.transition;_ref=(0,_objectWithoutProperties2.default)(_ref,"className percent prefixCls strokeColor strokeLinecap strokeWidth style trailColor trailWidth transition".split(" "));delete _ref.gapPosition;percent=Array.isArray(percent)?percent:[percent];var strokeColorList=Array.isArray(strokeColor)?strokeColor:[strokeColor];strokeColor=(0,_common.useTransitionDuration)(percent);var paths=(0,_slicedToArray2.default)(strokeColor,1)[0];
strokeColor=strokeWidth/2;var right=100-strokeWidth/2,pathString="M ".concat("round"===strokeLinecap?strokeColor:0,",").concat(strokeColor,"\n         L ").concat("round"===strokeLinecap?right:100,",").concat(strokeColor);strokeColor="0 0 100 ".concat(strokeWidth);var stackPtg=0;return React.createElement("svg",(0,_extends2.default)({className:(0,_classnames.default)("".concat(prefixCls,"-line"),className),viewBox:strokeColor,preserveAspectRatio:"none",style:style},_ref),React.createElement("path",
{className:"".concat(prefixCls,"-line-trail"),d:pathString,strokeLinecap:strokeLinecap,stroke:trailColor,strokeWidth:trailWidth||strokeWidth,fillOpacity:"0"}),percent.map(function(ptg,index){switch(strokeLinecap){case "round":var dashPercent=1-strokeWidth/100;break;case "square":dashPercent=1-strokeWidth/2/100;break;default:dashPercent=1}dashPercent={strokeDasharray:"".concat(ptg*dashPercent,"px, 100px"),strokeDashoffset:"-".concat(stackPtg,"px"),transition:transition||"stroke-dashoffset 0.3s ease 0s, stroke-dasharray .3s ease 0s, stroke 0.3s linear"};
var color=strokeColorList[index]||strokeColorList[strokeColorList.length-1];stackPtg+=ptg;return React.createElement("path",{key:index,className:"".concat(prefixCls,"-line-path"),d:pathString,strokeLinecap:strokeLinecap,stroke:color,strokeWidth:strokeWidth,fillOpacity:"0",ref:paths[index],style:dashPercent})}))};require.defaultProps=_common.defaultProps;require.displayName="Line";exports.default=require}
//# sourceMappingURL=module$node_modules$rc_progress$lib$Line.js.map
