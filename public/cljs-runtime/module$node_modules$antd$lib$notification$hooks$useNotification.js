shadow$provide.module$node_modules$antd$lib$notification$hooks$useNotification=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=function(getNotificationInstance,getRCNoticeProps){return function(){var getPrefixCls,innerInstance=null,_useRCNotification=(0,_useNotification["default"])({add:function(noticeProps,
holderCallback){null===innerInstance||void 0===innerInstance?void 0:innerInstance.component.add(noticeProps,holderCallback)}});_useRCNotification=(0,_slicedToArray2["default"])(_useRCNotification,2);var hookNotify=_useRCNotification[0],holder=_useRCNotification[1],hookApiRef=React.useRef({});hookApiRef.current.open=function(args){var mergedPrefixCls=getPrefixCls("notification",args.prefixCls);getNotificationInstance((0,_extends2["default"])((0,_extends2["default"])({},args),{prefixCls:mergedPrefixCls}),
function(_ref){var prefixCls=_ref.prefixCls;innerInstance=_ref.instance;hookNotify(getRCNoticeProps(args,prefixCls))})};["success","info","warning","error"].forEach(function(type){hookApiRef.current[type]=function(args){return hookApiRef.current.open((0,_extends2["default"])((0,_extends2["default"])({},args),{type:type}))}});return[hookApiRef.current,React.createElement(_configProvider.ConfigConsumer,{key:"holder"},function(context){getPrefixCls=context.getPrefixCls;return holder})]}};var _extends2=
module(require("module$node_modules$$babel$runtime$helpers$extends")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),React=global(require("module$node_modules$react$index")),_useNotification=module(require("module$node_modules$rc_notification$lib$useNotification")),_configProvider=require("module$node_modules$antd$lib$config_provider$index")}
//# sourceMappingURL=module$node_modules$antd$lib$notification$hooks$useNotification.js.map
