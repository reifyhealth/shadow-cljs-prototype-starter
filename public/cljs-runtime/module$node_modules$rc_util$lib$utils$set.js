shadow$provide.module$node_modules$rc_util$lib$utils$set=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?
arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function internalSet(entity,paths,value,removeIfUndefined){if(!paths.length)return value;var _paths=(0,_toArray2.default)(paths);paths=
_paths[0];_paths=_paths.slice(1);entity=entity||"number"!==typeof paths?Array.isArray(entity)?(0,_toConsumableArray2.default)(entity):_objectSpread({},entity):[];removeIfUndefined&&void 0===value&&1===_paths.length?delete entity[paths][_paths[0]]:entity[paths]=internalSet(entity[paths],_paths,value,removeIfUndefined);return entity}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(entity,
paths,value){var removeIfUndefined=3<arguments.length&&void 0!==arguments[3]?arguments[3]:!1;return paths.length&&removeIfUndefined&&void 0===value&&!(0,_get.default)(entity,paths.slice(0,-1))?entity:internalSet(entity,paths,value,removeIfUndefined)};var _defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_toConsumableArray2=global(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),_toArray2=global(require("module$node_modules$$babel$runtime$helpers$toArray")),
_get=global(require("module$node_modules$rc_util$lib$utils$get"))}
//# sourceMappingURL=module$node_modules$rc_util$lib$utils$set.js.map
