shadow$provide.module$node_modules$rc_select$lib$Selector$SingleSelector=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),React=global(require("module$node_modules$react$index")),
_pickAttrs=module(require("module$node_modules$rc_util$lib$pickAttrs")),_Input=module(require("module$node_modules$rc_select$lib$Selector$Input"));exports.default=function(props){var inputElement=props.inputElement,prefixCls=props.prefixCls,id=props.id,inputRef=props.inputRef,disabled=props.disabled,autoFocus=props.autoFocus,autoComplete=props.autoComplete,accessibilityIndex=props.accessibilityIndex,mode=props.mode,open=props.open,values=props.values,placeholder=props.placeholder,tabIndex=props.tabIndex,
showSearch=props.showSearch,searchValue=props.searchValue,activeValue=props.activeValue,maxLength=props.maxLength,onInputKeyDown=props.onInputKeyDown,onInputMouseDown=props.onInputMouseDown,onInputChange=props.onInputChange,onInputPaste=props.onInputPaste,onInputCompositionStart=props.onInputCompositionStart,onInputCompositionEnd=props.onInputCompositionEnd,_React$useState=React.useState(!1),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2);_React$useState=_React$useState2[0];var setInputChanged=
_React$useState2[1],combobox="combobox"===mode;showSearch=combobox||showSearch;values=values[0];searchValue=searchValue||"";combobox&&activeValue&&!_React$useState&&(searchValue=activeValue);React.useEffect(function(){combobox&&setInputChanged(!1)},[combobox,activeValue]);mode="combobox"===mode||open?!!searchValue:!1;activeValue=!values||"string"!==typeof values.label&&"number"!==typeof values.label?void 0:values.label.toString();return React.createElement(React.Fragment,null,React.createElement("span",
{className:"".concat(prefixCls,"-selection-search")},React.createElement(_Input.default,{ref:inputRef,prefixCls:prefixCls,id:id,open:open,inputElement:inputElement,disabled:disabled,autoFocus:autoFocus,autoComplete:autoComplete,editable:showSearch,accessibilityIndex:accessibilityIndex,value:searchValue,onKeyDown:onInputKeyDown,onMouseDown:onInputMouseDown,onChange:function(e){setInputChanged(!0);onInputChange(e)},onPaste:onInputPaste,onCompositionStart:onInputCompositionStart,onCompositionEnd:onInputCompositionEnd,
tabIndex:tabIndex,attrs:(0,_pickAttrs.default)(props,!0),maxLength:combobox?maxLength:void 0})),!combobox&&values&&!mode&&React.createElement("span",{className:"".concat(prefixCls,"-selection-item"),title:activeValue},values.label),!values&&!mode&&React.createElement("span",{className:"".concat(prefixCls,"-selection-placeholder")},placeholder))}}
//# sourceMappingURL=module$node_modules$rc_select$lib$Selector$SingleSelector.js.map
