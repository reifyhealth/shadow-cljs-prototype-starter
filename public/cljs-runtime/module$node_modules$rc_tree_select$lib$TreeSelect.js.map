{
"version":3,
"file":"module$node_modules$rc_tree_select$lib$TreeSelect.js",
"lineCount":27,
"mappings":"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",
"sources":["node_modules/rc-tree-select/lib/TreeSelect.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_tree_select$lib$TreeSelect\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _createSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createSuper\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _generate = _interopRequireDefault(require(\"rc-select/lib/generate\"));\n\nvar _valueUtil = require(\"rc-select/lib/utils/valueUtil\");\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _generator = require(\"rc-select/lib/interface/generator\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _OptionList = _interopRequireDefault(require(\"./OptionList\"));\n\nvar _TreeNode = _interopRequireDefault(require(\"./TreeNode\"));\n\nvar _valueUtil2 = require(\"./utils/valueUtil\");\n\nvar _warningPropsUtil = _interopRequireDefault(require(\"./utils/warningPropsUtil\"));\n\nvar _Context = require(\"./Context\");\n\nvar _useTreeData = _interopRequireDefault(require(\"./hooks/useTreeData\"));\n\nvar _useKeyValueMap3 = _interopRequireDefault(require(\"./hooks/useKeyValueMap\"));\n\nvar _useKeyValueMapping3 = _interopRequireDefault(require(\"./hooks/useKeyValueMapping\"));\n\nvar _strategyUtil = require(\"./utils/strategyUtil\");\n\nvar _legacyUtil = require(\"./utils/legacyUtil\");\n\nvar _useSelectValues = _interopRequireDefault(require(\"./hooks/useSelectValues\"));\n\nvar OMIT_PROPS = ['expandedKeys', 'treeData', 'treeCheckable', 'showCheckedStrategy', 'searchPlaceholder', 'treeLine', 'treeIcon', 'showTreeIcon', 'switcherIcon', 'treeNodeFilterProp', 'filterTreeNode', 'dropdownPopupAlign', 'treeDefaultExpandAll', 'treeCheckStrictly', 'treeExpandedKeys', 'treeLoadedKeys', 'treeMotion', 'onTreeExpand', 'onTreeLoad', 'loadData', 'treeDataSimpleMode', 'treeNodeLabelProp', 'treeDefaultExpandedKeys'];\nvar RefSelect = (0, _generate.default)({\n  prefixCls: 'rc-tree-select',\n  components: {\n    optionList: _OptionList.default\n  },\n  // Not use generate since we will handle ourself\n  convertChildrenToData: function convertChildrenToData() {\n    return null;\n  },\n  flattenOptions: _valueUtil2.flattenOptions,\n  // Handle `optionLabelProp` in TreeSelect component\n  getLabeledValue: _valueUtil.getLabeledValue,\n  filterOptions: _valueUtil2.filterOptions,\n  isValueDisabled: _valueUtil2.isValueDisabled,\n  findValueOption: _valueUtil2.findValueOption,\n  omitDOMProps: function omitDOMProps(props) {\n    var cloneProps = (0, _objectSpread2.default)({}, props);\n    OMIT_PROPS.forEach(function (prop) {\n      delete cloneProps[prop];\n    });\n    return cloneProps;\n  }\n});\nRefSelect.displayName = 'Select';\nvar RefTreeSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var multiple = props.multiple,\n      treeCheckable = props.treeCheckable,\n      treeCheckStrictly = props.treeCheckStrictly,\n      _props$showCheckedStr = props.showCheckedStrategy,\n      showCheckedStrategy = _props$showCheckedStr === void 0 ? 'SHOW_CHILD' : _props$showCheckedStr,\n      labelInValue = props.labelInValue,\n      loadData = props.loadData,\n      treeLoadedKeys = props.treeLoadedKeys,\n      _props$treeNodeFilter = props.treeNodeFilterProp,\n      treeNodeFilterProp = _props$treeNodeFilter === void 0 ? 'value' : _props$treeNodeFilter,\n      treeNodeLabelProp = props.treeNodeLabelProp,\n      treeDataSimpleMode = props.treeDataSimpleMode,\n      treeData = props.treeData,\n      treeExpandedKeys = props.treeExpandedKeys,\n      treeDefaultExpandedKeys = props.treeDefaultExpandedKeys,\n      treeDefaultExpandAll = props.treeDefaultExpandAll,\n      children = props.children,\n      treeIcon = props.treeIcon,\n      showTreeIcon = props.showTreeIcon,\n      switcherIcon = props.switcherIcon,\n      treeLine = props.treeLine,\n      treeMotion = props.treeMotion,\n      filterTreeNode = props.filterTreeNode,\n      dropdownPopupAlign = props.dropdownPopupAlign,\n      onChange = props.onChange,\n      onTreeExpand = props.onTreeExpand,\n      onTreeLoad = props.onTreeLoad,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      onSelect = props.onSelect,\n      onDeselect = props.onDeselect;\n  var mergedCheckable = treeCheckable || treeCheckStrictly;\n  var mergedMultiple = multiple || mergedCheckable;\n  var treeConduction = treeCheckable && !treeCheckStrictly;\n  var mergedLabelInValue = treeCheckStrictly || labelInValue; // ========================== Ref ==========================\n\n  var selectRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      scrollTo: selectRef.current.scrollTo,\n      focus: selectRef.current.focus,\n      blur: selectRef.current.blur\n    };\n  }); // ======================= Tree Data =======================\n  // Legacy both support `label` or `title` if not set.\n  // We have to fallback to function to handle this\n\n  var getTreeNodeTitle = function getTreeNodeTitle(node) {\n    if (!treeData) {\n      return node.title;\n    }\n\n    return node.label || node.title;\n  };\n\n  var getTreeNodeLabelProp = function getTreeNodeLabelProp(node) {\n    if (treeNodeLabelProp) {\n      return node[treeNodeLabelProp];\n    }\n\n    return getTreeNodeTitle(node);\n  };\n\n  var mergedTreeData = (0, _useTreeData.default)(treeData, children, {\n    getLabelProp: getTreeNodeTitle,\n    simpleMode: treeDataSimpleMode\n  });\n  var flattedOptions = (0, React.useMemo)(function () {\n    return (0, _valueUtil2.flattenOptions)(mergedTreeData);\n  }, [mergedTreeData]);\n\n  var _useKeyValueMap = (0, _useKeyValueMap3.default)(flattedOptions),\n      _useKeyValueMap2 = (0, _slicedToArray2.default)(_useKeyValueMap, 2),\n      cacheKeyMap = _useKeyValueMap2[0],\n      cacheValueMap = _useKeyValueMap2[1];\n\n  var _useKeyValueMapping = (0, _useKeyValueMapping3.default)(cacheKeyMap, cacheValueMap),\n      _useKeyValueMapping2 = (0, _slicedToArray2.default)(_useKeyValueMapping, 2),\n      getEntityByKey = _useKeyValueMapping2[0],\n      getEntityByValue = _useKeyValueMapping2[1]; // Only generate keyEntities for check conduction when is `treeCheckable`\n\n\n  var _useMemo = (0, React.useMemo)(function () {\n    if (treeConduction) {\n      return (0, _treeUtil.convertDataToEntities)(mergedTreeData);\n    }\n\n    return {\n      keyEntities: null\n    };\n  }, [mergedTreeData, treeCheckable, treeCheckStrictly]),\n      conductKeyEntities = _useMemo.keyEntities; // ========================= Value =========================\n\n\n  var _useMergedState = (0, _useMergedState3.default)(props.defaultValue, {\n    value: props.value\n  }),\n      _useMergedState2 = (0, _slicedToArray2.default)(_useMergedState, 2),\n      value = _useMergedState2[0],\n      setValue = _useMergedState2[1];\n  /** Get `missingRawValues` which not exist in the tree yet */\n\n\n  var splitRawValues = function splitRawValues(newRawValues) {\n    var missingRawValues = [];\n    var existRawValues = []; // Keep missing value in the cache\n\n    newRawValues.forEach(function (val) {\n      if (getEntityByValue(val)) {\n        existRawValues.push(val);\n      } else {\n        missingRawValues.push(val);\n      }\n    });\n    return {\n      missingRawValues: missingRawValues,\n      existRawValues: existRawValues\n    };\n  };\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    var valueHalfCheckedKeys = [];\n    var newRawValues = [];\n    (0, _valueUtil2.toArray)(value).forEach(function (item) {\n      if (item && (0, _typeof2.default)(item) === 'object' && 'value' in item) {\n        if (item.halfChecked && treeCheckStrictly) {\n          var entity = getEntityByValue(item.value);\n          valueHalfCheckedKeys.push(entity ? entity.key : item.value);\n        } else {\n          newRawValues.push(item.value);\n        }\n      } else {\n        newRawValues.push(item);\n      }\n    }); // We need do conduction of values\n\n    if (treeConduction) {\n      var _splitRawValues = splitRawValues(newRawValues),\n          missingRawValues = _splitRawValues.missingRawValues,\n          existRawValues = _splitRawValues.existRawValues;\n\n      var keyList = existRawValues.map(function (val) {\n        return getEntityByValue(val).key;\n      });\n\n      var _conductCheck = (0, _conductUtil.conductCheck)(keyList, true, conductKeyEntities),\n          checkedKeys = _conductCheck.checkedKeys,\n          halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n      return [[].concat((0, _toConsumableArray2.default)(missingRawValues), (0, _toConsumableArray2.default)(checkedKeys.map(function (key) {\n        return getEntityByKey(key).data.value;\n      }))), halfCheckedKeys];\n    }\n\n    return [newRawValues, valueHalfCheckedKeys];\n  }, [value, mergedMultiple, mergedLabelInValue, treeCheckable, treeCheckStrictly]),\n      _useMemo3 = (0, _slicedToArray2.default)(_useMemo2, 2),\n      rawValues = _useMemo3[0],\n      rawHalfCheckedKeys = _useMemo3[1];\n\n  var selectValues = (0, _useSelectValues.default)(rawValues, {\n    treeConduction: treeConduction,\n    value: value,\n    showCheckedStrategy: showCheckedStrategy,\n    conductKeyEntities: conductKeyEntities,\n    getEntityByValue: getEntityByValue,\n    getEntityByKey: getEntityByKey,\n    getLabelProp: getTreeNodeLabelProp\n  });\n\n  var triggerChange = function triggerChange(newRawValues, extra, source) {\n    setValue(mergedMultiple ? newRawValues : newRawValues[0]);\n\n    if (onChange) {\n      var eventValues = newRawValues;\n\n      if (treeConduction && showCheckedStrategy !== 'SHOW_ALL') {\n        var keyList = newRawValues.map(function (val) {\n          var entity = getEntityByValue(val);\n          return entity ? entity.key : val;\n        });\n        var formattedKeyList = (0, _strategyUtil.formatStrategyKeys)(keyList, showCheckedStrategy, conductKeyEntities);\n        eventValues = formattedKeyList.map(function (key) {\n          var entity = getEntityByKey(key);\n          return entity ? entity.data.value : key;\n        });\n      }\n\n      var _ref = extra || {\n        triggerValue: undefined,\n        selected: undefined\n      },\n          triggerValue = _ref.triggerValue,\n          selected = _ref.selected;\n\n      var returnValues = mergedLabelInValue ? (0, _valueUtil2.getRawValueLabeled)(eventValues, value, getEntityByValue, getTreeNodeLabelProp) : eventValues; // We need fill half check back\n\n      if (treeCheckStrictly) {\n        var halfValues = rawHalfCheckedKeys.map(function (key) {\n          var entity = getEntityByKey(key);\n          return entity ? entity.data.value : key;\n        }).filter(function (val) {\n          return !eventValues.includes(val);\n        });\n        returnValues = [].concat((0, _toConsumableArray2.default)(returnValues), (0, _toConsumableArray2.default)((0, _valueUtil2.getRawValueLabeled)(halfValues, value, getEntityByValue, getTreeNodeLabelProp)));\n      }\n\n      var additionalInfo = {\n        // [Legacy] Always return as array contains label & value\n        preValue: selectValues,\n        triggerValue: triggerValue\n      }; // [Legacy] Fill legacy data if user query.\n      // This is expansive that we only fill when user query\n      // https://github.com/react-component/tree-select/blob/fe33eb7c27830c9ac70cd1fdb1ebbe7bc679c16a/src/Select.jsx\n\n      var showPosition = true;\n\n      if (treeCheckStrictly || source === 'selection' && !selected) {\n        showPosition = false;\n      }\n\n      (0, _legacyUtil.fillAdditionalInfo)(additionalInfo, triggerValue, newRawValues, mergedTreeData, showPosition);\n\n      if (mergedCheckable) {\n        additionalInfo.checked = selected;\n      } else {\n        additionalInfo.selected = selected;\n      }\n\n      onChange(mergedMultiple ? returnValues : returnValues[0], mergedLabelInValue ? null : eventValues.map(function (val) {\n        var entity = getEntityByValue(val);\n        return entity ? getTreeNodeLabelProp(entity.data) : null;\n      }), additionalInfo);\n    }\n  };\n\n  var onInternalSelect = function onInternalSelect(selectValue, option, source) {\n    var eventValue = mergedLabelInValue ? selectValue : selectValue;\n\n    if (!mergedMultiple) {\n      // Single mode always set value\n      triggerChange([selectValue], {\n        selected: true,\n        triggerValue: selectValue\n      }, source);\n    } else {\n      var newRawValues = (0, _valueUtil2.addValue)(rawValues, selectValue); // Add keys if tree conduction\n\n      if (treeConduction) {\n        // Should keep missing values\n        var _splitRawValues2 = splitRawValues(newRawValues),\n            missingRawValues = _splitRawValues2.missingRawValues,\n            existRawValues = _splitRawValues2.existRawValues;\n\n        var keyList = existRawValues.map(function (val) {\n          return getEntityByValue(val).key;\n        });\n\n        var _conductCheck2 = (0, _conductUtil.conductCheck)(keyList, true, conductKeyEntities),\n            checkedKeys = _conductCheck2.checkedKeys;\n\n        newRawValues = [].concat((0, _toConsumableArray2.default)(missingRawValues), (0, _toConsumableArray2.default)(checkedKeys.map(function (key) {\n          return getEntityByKey(key).data.value;\n        })));\n      }\n\n      triggerChange(newRawValues, {\n        selected: true,\n        triggerValue: selectValue\n      }, source);\n    }\n\n    if (onSelect) {\n      onSelect(eventValue, option);\n    }\n  };\n\n  var onInternalDeselect = function onInternalDeselect(selectValue, option, source) {\n    var eventValue = mergedLabelInValue ? selectValue : selectValue;\n    var newRawValues = (0, _valueUtil2.removeValue)(rawValues, selectValue); // Remove keys if tree conduction\n\n    if (treeConduction) {\n      var _splitRawValues3 = splitRawValues(newRawValues),\n          missingRawValues = _splitRawValues3.missingRawValues,\n          existRawValues = _splitRawValues3.existRawValues;\n\n      var keyList = existRawValues.map(function (val) {\n        return getEntityByValue(val).key;\n      });\n\n      var _conductCheck3 = (0, _conductUtil.conductCheck)(keyList, {\n        checked: false,\n        halfCheckedKeys: rawHalfCheckedKeys\n      }, conductKeyEntities),\n          checkedKeys = _conductCheck3.checkedKeys;\n\n      newRawValues = [].concat((0, _toConsumableArray2.default)(missingRawValues), (0, _toConsumableArray2.default)(checkedKeys.map(function (key) {\n        return getEntityByKey(key).data.value;\n      })));\n    }\n\n    triggerChange(newRawValues, {\n      selected: false,\n      triggerValue: selectValue\n    }, source);\n\n    if (onDeselect) {\n      onDeselect(eventValue, option);\n    }\n  };\n\n  var onInternalClear = function onInternalClear() {\n    triggerChange([], null, 'clear');\n  }; // ========================= Open ==========================\n\n\n  var onInternalDropdownVisibleChange = React.useCallback(function (open) {\n    if (onDropdownVisibleChange) {\n      var legacyParam = {};\n      Object.defineProperty(legacyParam, 'documentClickClose', {\n        get: function get() {\n          (0, _warning.default)(false, 'Second param of `onDropdownVisibleChange` has been removed.');\n          return false;\n        }\n      });\n      onDropdownVisibleChange(open, legacyParam);\n    }\n  }, [onDropdownVisibleChange]); // ======================== Warning ========================\n\n  if (process.env.NODE_ENV !== 'production') {\n    (0, _warningPropsUtil.default)(props);\n  } // ======================== Render =========================\n  // We pass some props into select props style\n\n\n  var selectProps = {\n    optionLabelProp: null,\n    optionFilterProp: treeNodeFilterProp,\n    dropdownAlign: dropdownPopupAlign,\n    internalProps: {\n      mark: _generator.INTERNAL_PROPS_MARK,\n      onClear: onInternalClear,\n      skipTriggerChange: true,\n      skipTriggerSelect: true,\n      onRawSelect: onInternalSelect,\n      onRawDeselect: onInternalDeselect\n    }\n  };\n\n  if ('filterTreeNode' in props) {\n    selectProps.filterOption = filterTreeNode;\n  }\n\n  return /*#__PURE__*/React.createElement(_Context.SelectContext.Provider, {\n    value: {\n      checkable: mergedCheckable,\n      loadData: loadData,\n      treeLoadedKeys: treeLoadedKeys,\n      onTreeLoad: onTreeLoad,\n      checkedKeys: rawValues,\n      halfCheckedKeys: rawHalfCheckedKeys,\n      treeDefaultExpandAll: treeDefaultExpandAll,\n      treeExpandedKeys: treeExpandedKeys,\n      treeDefaultExpandedKeys: treeDefaultExpandedKeys,\n      onTreeExpand: onTreeExpand,\n      treeIcon: treeIcon,\n      treeMotion: treeMotion,\n      showTreeIcon: showTreeIcon,\n      switcherIcon: switcherIcon,\n      treeLine: treeLine,\n      treeNodeFilterProp: treeNodeFilterProp\n    }\n  }, /*#__PURE__*/React.createElement(RefSelect, (0, _extends2.default)({\n    ref: selectRef,\n    mode: mergedMultiple ? 'multiple' : null\n  }, props, selectProps, {\n    value: selectValues // We will handle this ourself since we need calculate conduction\n    ,\n    labelInValue: true,\n    options: mergedTreeData,\n    onChange: null,\n    onSelect: null,\n    onDeselect: null,\n    onDropdownVisibleChange: onInternalDropdownVisibleChange\n  })));\n}); // Use class component since typescript not support generic\n// by `forwardRef` with function component yet.\n\nvar TreeSelect = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2.default)(TreeSelect, _React$Component);\n\n  var _super = (0, _createSuper2.default)(TreeSelect);\n\n  function TreeSelect() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TreeSelect);\n    _this = _super.apply(this, arguments);\n    _this.selectRef = /*#__PURE__*/React.createRef();\n\n    _this.focus = function () {\n      _this.selectRef.current.focus();\n    };\n\n    _this.blur = function () {\n      _this.selectRef.current.blur();\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(TreeSelect, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(RefTreeSelect, (0, _extends2.default)({\n        ref: this.selectRef\n      }, this.props));\n    }\n  }]);\n  return TreeSelect;\n}(React.Component);\n\nTreeSelect.TreeNode = _TreeNode.default;\nTreeSelect.SHOW_ALL = _strategyUtil.SHOW_ALL;\nTreeSelect.SHOW_PARENT = _strategyUtil.SHOW_PARENT;\nTreeSelect.SHOW_CHILD = _strategyUtil.SHOW_CHILD;\nvar _default = TreeSelect;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireWildcard","_interopRequireDefault","Object","defineProperty","value","default","_classCallCheck2","_createClass2","_inherits2","_createSuper2","_extends2","_toConsumableArray2","_typeof2","_slicedToArray2","_objectSpread2","React","_generate","_valueUtil","_treeUtil","_conductUtil","_generator","_useMergedState3","_warning","_OptionList","_TreeNode","_valueUtil2","_warningPropsUtil","_Context","_useTreeData","_useKeyValueMap3","_useKeyValueMapping3","_strategyUtil","_legacyUtil","_useSelectValues","OMIT_PROPS","RefSelect","prefixCls","components","optionList","convertChildrenToData","flattenOptions","getLabeledValue","filterOptions","isValueDisabled","findValueOption","omitDOMProps","props","cloneProps","forEach","prop","displayName","RefTreeSelect","forwardRef","ref","treeCheckable","treeCheckStrictly","_props$showCheckedStr","showCheckedStrategy","labelInValue","loadData","treeLoadedKeys","_props$treeNodeFilter","treeNodeFilterProp","treeNodeLabelProp","treeDataSimpleMode","treeData","treeExpandedKeys","treeDefaultExpandedKeys","treeDefaultExpandAll","children","treeIcon","showTreeIcon","switcherIcon","treeLine","treeMotion","filterTreeNode","dropdownPopupAlign","onChange","onTreeExpand","onTreeLoad","onDropdownVisibleChange","onSelect","onDeselect","mergedCheckable","mergedMultiple","multiple","treeConduction","mergedLabelInValue","selectRef","useRef","useImperativeHandle","scrollTo","current","focus","blur","getTreeNodeTitle","node","label","title","getTreeNodeLabelProp","mergedTreeData","getLabelProp","simpleMode","flattedOptions","useMemo","_useKeyValueMap","_useKeyValueMap2","cacheKeyMap","cacheValueMap","_useKeyValueMapping","_useKeyValueMapping2","getEntityByKey","getEntityByValue","conductKeyEntities","_useMemo","convertDataToEntities","keyEntities","_useMergedState","defaultValue","_useMergedState2","setValue","splitRawValues","newRawValues","missingRawValues","existRawValues","val","push","_useMemo2","valueHalfCheckedKeys","toArray","item","halfChecked","entity","key","_splitRawValues","keyList","map","_conductCheck","conductCheck","checkedKeys","halfCheckedKeys","concat","data","_useMemo3","rawValues","rawHalfCheckedKeys","selectValues","triggerChange","extra","source","eventValues","formattedKeyList","formatStrategyKeys","_ref","triggerValue","undefined","selected","returnValues","getRawValueLabeled","halfValues","filter","includes","additionalInfo","preValue","showPosition","fillAdditionalInfo","checked","onInternalDropdownVisibleChange","useCallback","open","legacyParam","get","selectProps","optionLabelProp","optionFilterProp","dropdownAlign","internalProps","mark","INTERNAL_PROPS_MARK","onClear","onInternalClear","skipTriggerChange","skipTriggerSelect","onRawSelect","onInternalSelect","selectValue","option","addValue","_splitRawValues2","_conductCheck2","onRawDeselect","onInternalDeselect","removeValue","_splitRawValues3","_conductCheck3","filterOption","createElement","SelectContext","Provider","checkable","mode","options","TreeSelect","_React$Component","_this","_super","apply","arguments","createRef","_this.focus","_this.blur","render","Component","TreeNode","SHOW_ALL","SHOW_PARENT","SHOW_CHILD"]
}
