shadow$provide.module$node_modules$$ctrl$tinycolor$dist$random=function(global,require,module,exports){function random(options){void 0===options&&(options={});if(void 0!==options.count&&null!==options.count){var totalColors=options.count,colors=[];for(options.count=void 0;totalColors>colors.length;)options.count=null,options.seed&&(options.seed+=1),colors.push(random(options));options.count=totalColors;return colors}totalColors=options.seed;colors=getHueRange(options.hue);totalColors=randomWithin(colors,
totalColors);0>totalColors&&(totalColors=360+totalColors);colors=options;if("monochrome"===colors.hue)colors=0;else if("random"===colors.luminosity)colors=randomWithin([0,100],colors.seed);else{var saturationRange=getColorInfo(totalColors).saturationRange,sMin=saturationRange[0];saturationRange=saturationRange[1];switch(colors.luminosity){case "bright":sMin=55;break;case "dark":sMin=saturationRange-10;break;case "light":saturationRange=55}colors=randomWithin([sMin,saturationRange],colors.seed)}sMin=
options;a:{saturationRange=colors;for(var lowerBounds=getColorInfo(totalColors).lowerBounds,i=0;i<lowerBounds.length-1;i++){var s1=lowerBounds[i][0],v1=lowerBounds[i][1],s2=lowerBounds[i+1][0],v2=lowerBounds[i+1][1];if(saturationRange>=s1&&saturationRange<=s2){lowerBounds=(v2-v1)/(s2-s1);saturationRange=lowerBounds*saturationRange+(v1-lowerBounds*s1);break a}}saturationRange=0}s1=100;switch(sMin.luminosity){case "dark":s1=saturationRange+20;break;case "light":saturationRange=(s1+saturationRange)/
2;break;case "random":saturationRange=0,s1=100}sMin=randomWithin([saturationRange,s1],sMin.seed);totalColors={h:totalColors,s:colors,v:sMin};void 0!==options.alpha&&(totalColors.a=options.alpha);return new index_1.TinyColor(totalColors)}function getHueRange(colorInput){var num=parseInt(colorInput,10);if(!Number.isNaN(num)&&360>num&&0<num)return[num,num];if("string"===typeof colorInput){if(num=exports.bounds.find(function(n){return n.name===colorInput}))if(num=defineColor(num),num.hueRange)return num.hueRange;
num=new index_1.TinyColor(colorInput);if(num.isValid)return num=num.toHsv().h,[num,num]}return[0,360]}function getColorInfo(hue){334<=hue&&360>=hue&&(hue-=360);for(var _i=0,bounds_1=exports.bounds;_i<bounds_1.length;_i++){var color=defineColor(bounds_1[_i]);if(color.hueRange&&hue>=color.hueRange[0]&&hue<=color.hueRange[1])return color}throw Error("Color not found");}function randomWithin(range,seed){if(void 0===seed)return Math.floor(range[0]+Math.random()*(range[1]+1-range[0]));var min=range[0]||
0;return Math.floor(min+(9301*seed+49297)%233280/233280*((range[1]||1)-min))}function defineColor(bound){return{name:bound.name,hueRange:bound.hueRange,lowerBounds:bound.lowerBounds,saturationRange:[bound.lowerBounds[0][0],bound.lowerBounds[bound.lowerBounds.length-1][0]],brightnessRange:[bound.lowerBounds[bound.lowerBounds.length-1][1],bound.lowerBounds[0][1]]}}Object.defineProperty(exports,"__esModule",{value:!0});exports.bounds=exports.random=void 0;var index_1=require("module$node_modules$$ctrl$tinycolor$dist$index");
exports.random=random;exports.bounds=[{name:"monochrome",hueRange:null,lowerBounds:[[0,0],[100,0]]},{name:"red",hueRange:[-26,18],lowerBounds:[[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]},{name:"orange",hueRange:[19,46],lowerBounds:[[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]},{name:"yellow",hueRange:[47,62],lowerBounds:[[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]},{name:"green",hueRange:[63,178],lowerBounds:[[30,100],[40,90],[50,
85],[60,81],[70,74],[80,64],[90,50],[100,40]]},{name:"blue",hueRange:[179,257],lowerBounds:[[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]},{name:"purple",hueRange:[258,282],lowerBounds:[[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]},{name:"pink",hueRange:[283,334],lowerBounds:[[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]}]}
//# sourceMappingURL=module$node_modules$$ctrl$tinycolor$dist$random.js.map
