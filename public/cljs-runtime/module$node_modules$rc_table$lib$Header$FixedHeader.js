shadow$provide.module$node_modules$rc_table$lib$Header$FixedHeader=function(global,require,module,exports){function useColumnWidth(colWidths,columCount){return(0,React.useMemo)(function(){for(var cloneColumns=[],i=0;i<columCount;i+=1){var val=colWidths[i];if(void 0!==val)cloneColumns[i]=val;else return null}return cloneColumns},[colWidths.join("_"),columCount])}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),_objectWithoutProperties2=module(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),
React=global(require("module$node_modules$react$index")),_classnames=module(require("module$node_modules$classnames$index")),_ref2=require("module$node_modules$rc_util$lib$ref"),_Header=module(require("module$node_modules$rc_table$lib$Header$Header")),_ColGroup=module(require("module$node_modules$rc_table$lib$ColGroup")),_TableContext=module(require("module$node_modules$rc_table$lib$context$TableContext"));require=React.forwardRef(function(_ref,ref){var noData=_ref.noData,columns=_ref.columns,flattenColumns=
_ref.flattenColumns,colWidths=_ref.colWidths,columCount=_ref.columCount,stickyOffsets=_ref.stickyOffsets,direction=_ref.direction,fixHeader=_ref.fixHeader,offsetHeader=_ref.offsetHeader,stickyClassName=_ref.stickyClassName,onScroll=_ref.onScroll;_ref=(0,_objectWithoutProperties2.default)(_ref,"noData columns flattenColumns colWidths columCount stickyOffsets direction fixHeader offsetHeader stickyClassName onScroll".split(" "));var _React$useContext=React.useContext(_TableContext.default),prefixCls=
_React$useContext.prefixCls,scrollbarSize=_React$useContext.scrollbarSize,isSticky=_React$useContext.isSticky,combinationScrollBarSize=isSticky&&!fixHeader?0:scrollbarSize,scrollRef=React.useRef(null);fixHeader=React.useCallback(function(element){(0,_ref2.fillRef)(ref,element);(0,_ref2.fillRef)(scrollRef,element)},[]);React.useEffect(function(){function onWheel(e){var currentTarget=e.currentTarget,deltaX=e.deltaX;deltaX&&(onScroll({currentTarget:currentTarget,scrollLeft:currentTarget.scrollLeft+deltaX}),
e.preventDefault())}var _scrollRef$current;null===(_scrollRef$current=scrollRef.current)||void 0===_scrollRef$current?void 0:_scrollRef$current.addEventListener("wheel",onWheel);return function(){var _scrollRef$current2;null===(_scrollRef$current2=scrollRef.current)||void 0===_scrollRef$current2?void 0:_scrollRef$current2.removeEventListener("wheel",onWheel)}},[]);_React$useContext=React.useMemo(function(){return flattenColumns.every(function(column){return 0<=column.width})},[flattenColumns]);scrollbarSize=
flattenColumns[flattenColumns.length-1];var ScrollBarColumn={fixed:scrollbarSize?scrollbarSize.fixed:null,onHeaderCell:function(){return{className:"".concat(prefixCls,"-cell-scrollbar")}}};scrollbarSize=(0,React.useMemo)(function(){return combinationScrollBarSize?[].concat((0,_toConsumableArray2.default)(columns),[ScrollBarColumn]):columns},[combinationScrollBarSize,columns]);var flattenColumnsWithScrollbar=(0,React.useMemo)(function(){return combinationScrollBarSize?[].concat((0,_toConsumableArray2.default)(flattenColumns),
[ScrollBarColumn]):flattenColumns},[combinationScrollBarSize,flattenColumns]),headerStickyOffsets=(0,React.useMemo)(function(){var right=stickyOffsets.right,left=stickyOffsets.left;return(0,_objectSpread2.default)((0,_objectSpread2.default)({},stickyOffsets),{},{left:"rtl"===direction?[].concat((0,_toConsumableArray2.default)(left.map(function(width){return width+combinationScrollBarSize})),[0]):left,right:"rtl"===direction?right:[].concat((0,_toConsumableArray2.default)(right.map(function(width){return width+
combinationScrollBarSize})),[0]),isSticky:isSticky})},[combinationScrollBarSize,stickyOffsets,isSticky]);colWidths=useColumnWidth(colWidths,columCount);return React.createElement("div",{style:(0,_objectSpread2.default)({overflow:"hidden"},isSticky?{top:offsetHeader}:{}),ref:fixHeader,className:(0,_classnames.default)("".concat(prefixCls,"-header"),(0,_defineProperty2.default)({},stickyClassName,!!stickyClassName))},React.createElement("table",{style:{tableLayout:"fixed",visibility:noData||colWidths?
null:"hidden"}},(!noData||_React$useContext)&&React.createElement(_ColGroup.default,{colWidths:colWidths?[].concat((0,_toConsumableArray2.default)(colWidths),[combinationScrollBarSize]):[],columCount:columCount+1,columns:flattenColumnsWithScrollbar}),React.createElement(_Header.default,(0,_extends2.default)({},_ref,{stickyOffsets:headerStickyOffsets,columns:scrollbarSize,flattenColumns:flattenColumnsWithScrollbar}))))});require.displayName="FixedHeader";exports.default=require}
//# sourceMappingURL=module$node_modules$rc_table$lib$Header$FixedHeader.js.map
